// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

#include "service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace algo {
namespace seemmo {
class TrailRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TrailRequest>
      _instance;
} _TrailRequest_default_instance_;
class TrailReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TrailReply>
      _instance;
} _TrailReply_default_instance_;
class RecognizeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecognizeRequest>
      _instance;
} _RecognizeRequest_default_instance_;
class RecognizeReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecognizeReply>
      _instance;
} _RecognizeReply_default_instance_;
class ImgRecognizeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImgRecognizeRequest>
      _instance;
} _ImgRecognizeRequest_default_instance_;
class ImgRecognizeReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImgRecognizeReply>
      _instance;
} _ImgRecognizeReply_default_instance_;
}  // namespace seemmo
}  // namespace algo
namespace protobuf_service_2eproto {
static void InitDefaultsTrailRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algo::seemmo::_TrailRequest_default_instance_;
    new (ptr) ::algo::seemmo::TrailRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algo::seemmo::TrailRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TrailRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTrailRequest}, {}};

static void InitDefaultsTrailReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algo::seemmo::_TrailReply_default_instance_;
    new (ptr) ::algo::seemmo::TrailReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algo::seemmo::TrailReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TrailReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTrailReply}, {}};

static void InitDefaultsRecognizeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algo::seemmo::_RecognizeRequest_default_instance_;
    new (ptr) ::algo::seemmo::RecognizeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algo::seemmo::RecognizeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RecognizeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRecognizeRequest}, {}};

static void InitDefaultsRecognizeReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algo::seemmo::_RecognizeReply_default_instance_;
    new (ptr) ::algo::seemmo::RecognizeReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algo::seemmo::RecognizeReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RecognizeReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRecognizeReply}, {}};

static void InitDefaultsImgRecognizeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algo::seemmo::_ImgRecognizeRequest_default_instance_;
    new (ptr) ::algo::seemmo::ImgRecognizeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algo::seemmo::ImgRecognizeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ImgRecognizeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsImgRecognizeRequest}, {}};

static void InitDefaultsImgRecognizeReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::algo::seemmo::_ImgRecognizeReply_default_instance_;
    new (ptr) ::algo::seemmo::ImgRecognizeReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algo::seemmo::ImgRecognizeReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ImgRecognizeReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsImgRecognizeReply}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TrailRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TrailReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecognizeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecognizeReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImgRecognizeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImgRecognizeReply.base);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algo::seemmo::TrailRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algo::seemmo::TrailRequest, videochl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algo::seemmo::TrailRequest, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algo::seemmo::TrailRequest, bgr24_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algo::seemmo::TrailRequest, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algo::seemmo::TrailRequest, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algo::seemmo::TrailRequest, param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algo::seemmo::TrailReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algo::seemmo::TrailReply, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algo::seemmo::RecognizeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algo::seemmo::RecognizeRequest, videochl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algo::seemmo::RecognizeRequest, bgr24_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algo::seemmo::RecognizeRequest, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algo::seemmo::RecognizeRequest, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algo::seemmo::RecognizeRequest, param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algo::seemmo::RecognizeReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algo::seemmo::RecognizeReply, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algo::seemmo::ImgRecognizeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algo::seemmo::ImgRecognizeRequest, imageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algo::seemmo::ImgRecognizeRequest, jpeg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algo::seemmo::ImgRecognizeReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algo::seemmo::ImgRecognizeReply, data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::algo::seemmo::TrailRequest)},
  { 11, -1, sizeof(::algo::seemmo::TrailReply)},
  { 17, -1, sizeof(::algo::seemmo::RecognizeRequest)},
  { 27, -1, sizeof(::algo::seemmo::RecognizeReply)},
  { 33, -1, sizeof(::algo::seemmo::ImgRecognizeRequest)},
  { 40, -1, sizeof(::algo::seemmo::ImgRecognizeReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::algo::seemmo::_TrailRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algo::seemmo::_TrailReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algo::seemmo::_RecognizeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algo::seemmo::_RecognizeReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algo::seemmo::_ImgRecognizeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::algo::seemmo::_ImgRecognizeReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rservice.proto\022\013algo.seemmo\"p\n\014TrailReq"
      "uest\022\020\n\010videoChl\030\001 \001(\r\022\021\n\ttimestamp\030\002 \001("
      "\004\022\r\n\005bgr24\030\003 \001(\014\022\016\n\006height\030\004 \001(\r\022\r\n\005widt"
      "h\030\005 \001(\r\022\r\n\005param\030\006 \001(\t\"\032\n\nTrailReply\022\014\n\004"
      "data\030\001 \001(\t\"a\n\020RecognizeRequest\022\020\n\010videoC"
      "hl\030\001 \001(\r\022\r\n\005bgr24\030\002 \001(\014\022\016\n\006height\030\003 \001(\r\022"
      "\r\n\005width\030\004 \001(\r\022\r\n\005param\030\005 \001(\t\"\036\n\016Recogni"
      "zeReply\022\014\n\004data\030\001 \001(\t\"4\n\023ImgRecognizeReq"
      "uest\022\017\n\007imageId\030\001 \001(\r\022\014\n\004jpeg\030\002 \001(\014\"!\n\021I"
      "mgRecognizeReply\022\014\n\004data\030\001 \001(\t2\234\001\n\020Video"
      "ProcService\022=\n\005Trail\022\031.algo.seemmo.Trail"
      "Request\032\027.algo.seemmo.TrailReply\"\000\022I\n\tRe"
      "cognize\022\035.algo.seemmo.RecognizeRequest\032\033"
      ".algo.seemmo.RecognizeReply\"\0002a\n\016ImgProc"
      "Service\022O\n\tRecognize\022 .algo.seemmo.ImgRe"
      "cognizeRequest\032\036.algo.seemmo.ImgRecogniz"
      "eReply\"\000B\003\200\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 661);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "service.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_service_2eproto
namespace algo {
namespace seemmo {

// ===================================================================

void TrailRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrailRequest::kVideoChlFieldNumber;
const int TrailRequest::kTimestampFieldNumber;
const int TrailRequest::kBgr24FieldNumber;
const int TrailRequest::kHeightFieldNumber;
const int TrailRequest::kWidthFieldNumber;
const int TrailRequest::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrailRequest::TrailRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_TrailRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:algo.seemmo.TrailRequest)
}
TrailRequest::TrailRequest(const TrailRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bgr24_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bgr24().size() > 0) {
    bgr24_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bgr24_);
  }
  param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.param().size() > 0) {
    param_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param_);
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&width_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(width_));
  // @@protoc_insertion_point(copy_constructor:algo.seemmo.TrailRequest)
}

void TrailRequest::SharedCtor() {
  bgr24_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&width_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(width_));
}

TrailRequest::~TrailRequest() {
  // @@protoc_insertion_point(destructor:algo.seemmo.TrailRequest)
  SharedDtor();
}

void TrailRequest::SharedDtor() {
  bgr24_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TrailRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TrailRequest::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TrailRequest& TrailRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_TrailRequest.base);
  return *internal_default_instance();
}


void TrailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:algo.seemmo.TrailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bgr24_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&width_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(width_));
  _internal_metadata_.Clear();
}

bool TrailRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algo.seemmo.TrailRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 videoChl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &videochl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes bgr24 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bgr24()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 height = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 width = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string param = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->param().data(), static_cast<int>(this->param().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "algo.seemmo.TrailRequest.param"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algo.seemmo.TrailRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algo.seemmo.TrailRequest)
  return false;
#undef DO_
}

void TrailRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algo.seemmo.TrailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 videoChl = 1;
  if (this->videochl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->videochl(), output);
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->timestamp(), output);
  }

  // bytes bgr24 = 3;
  if (this->bgr24().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->bgr24(), output);
  }

  // uint32 height = 4;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->height(), output);
  }

  // uint32 width = 5;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->width(), output);
  }

  // string param = 6;
  if (this->param().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->param().data(), static_cast<int>(this->param().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algo.seemmo.TrailRequest.param");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->param(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:algo.seemmo.TrailRequest)
}

::google::protobuf::uint8* TrailRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:algo.seemmo.TrailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 videoChl = 1;
  if (this->videochl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->videochl(), target);
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->timestamp(), target);
  }

  // bytes bgr24 = 3;
  if (this->bgr24().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->bgr24(), target);
  }

  // uint32 height = 4;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->height(), target);
  }

  // uint32 width = 5;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->width(), target);
  }

  // string param = 6;
  if (this->param().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->param().data(), static_cast<int>(this->param().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algo.seemmo.TrailRequest.param");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->param(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algo.seemmo.TrailRequest)
  return target;
}

size_t TrailRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algo.seemmo.TrailRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes bgr24 = 3;
  if (this->bgr24().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bgr24());
  }

  // string param = 6;
  if (this->param().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->param());
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  // uint32 videoChl = 1;
  if (this->videochl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->videochl());
  }

  // uint32 height = 4;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height());
  }

  // uint32 width = 5;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TrailRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algo.seemmo.TrailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TrailRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrailRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algo.seemmo.TrailRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algo.seemmo.TrailRequest)
    MergeFrom(*source);
  }
}

void TrailRequest::MergeFrom(const TrailRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algo.seemmo.TrailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bgr24().size() > 0) {

    bgr24_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bgr24_);
  }
  if (from.param().size() > 0) {

    param_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.videochl() != 0) {
    set_videochl(from.videochl());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
}

void TrailRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algo.seemmo.TrailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrailRequest::CopyFrom(const TrailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algo.seemmo.TrailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrailRequest::IsInitialized() const {
  return true;
}

void TrailRequest::Swap(TrailRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrailRequest::InternalSwap(TrailRequest* other) {
  using std::swap;
  bgr24_.Swap(&other->bgr24_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  param_.Swap(&other->param_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(videochl_, other->videochl_);
  swap(height_, other->height_);
  swap(width_, other->width_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TrailRequest::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TrailReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrailReply::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrailReply::TrailReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_TrailReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:algo.seemmo.TrailReply)
}
TrailReply::TrailReply(const TrailReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:algo.seemmo.TrailReply)
}

void TrailReply::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TrailReply::~TrailReply() {
  // @@protoc_insertion_point(destructor:algo.seemmo.TrailReply)
  SharedDtor();
}

void TrailReply::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TrailReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TrailReply::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TrailReply& TrailReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_TrailReply.base);
  return *internal_default_instance();
}


void TrailReply::Clear() {
// @@protoc_insertion_point(message_clear_start:algo.seemmo.TrailReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TrailReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algo.seemmo.TrailReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "algo.seemmo.TrailReply.data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algo.seemmo.TrailReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algo.seemmo.TrailReply)
  return false;
#undef DO_
}

void TrailReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algo.seemmo.TrailReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algo.seemmo.TrailReply.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:algo.seemmo.TrailReply)
}

::google::protobuf::uint8* TrailReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:algo.seemmo.TrailReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algo.seemmo.TrailReply.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algo.seemmo.TrailReply)
  return target;
}

size_t TrailReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algo.seemmo.TrailReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TrailReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algo.seemmo.TrailReply)
  GOOGLE_DCHECK_NE(&from, this);
  const TrailReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrailReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algo.seemmo.TrailReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algo.seemmo.TrailReply)
    MergeFrom(*source);
  }
}

void TrailReply::MergeFrom(const TrailReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algo.seemmo.TrailReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void TrailReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algo.seemmo.TrailReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrailReply::CopyFrom(const TrailReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algo.seemmo.TrailReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrailReply::IsInitialized() const {
  return true;
}

void TrailReply::Swap(TrailReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrailReply::InternalSwap(TrailReply* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TrailReply::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecognizeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecognizeRequest::kVideoChlFieldNumber;
const int RecognizeRequest::kBgr24FieldNumber;
const int RecognizeRequest::kHeightFieldNumber;
const int RecognizeRequest::kWidthFieldNumber;
const int RecognizeRequest::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecognizeRequest::RecognizeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_RecognizeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:algo.seemmo.RecognizeRequest)
}
RecognizeRequest::RecognizeRequest(const RecognizeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bgr24_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bgr24().size() > 0) {
    bgr24_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bgr24_);
  }
  param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.param().size() > 0) {
    param_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param_);
  }
  ::memcpy(&videochl_, &from.videochl_,
    static_cast<size_t>(reinterpret_cast<char*>(&width_) -
    reinterpret_cast<char*>(&videochl_)) + sizeof(width_));
  // @@protoc_insertion_point(copy_constructor:algo.seemmo.RecognizeRequest)
}

void RecognizeRequest::SharedCtor() {
  bgr24_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&videochl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&width_) -
      reinterpret_cast<char*>(&videochl_)) + sizeof(width_));
}

RecognizeRequest::~RecognizeRequest() {
  // @@protoc_insertion_point(destructor:algo.seemmo.RecognizeRequest)
  SharedDtor();
}

void RecognizeRequest::SharedDtor() {
  bgr24_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RecognizeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RecognizeRequest::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecognizeRequest& RecognizeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_RecognizeRequest.base);
  return *internal_default_instance();
}


void RecognizeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:algo.seemmo.RecognizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bgr24_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&videochl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&width_) -
      reinterpret_cast<char*>(&videochl_)) + sizeof(width_));
  _internal_metadata_.Clear();
}

bool RecognizeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algo.seemmo.RecognizeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 videoChl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &videochl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes bgr24 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bgr24()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 width = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string param = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->param().data(), static_cast<int>(this->param().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "algo.seemmo.RecognizeRequest.param"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algo.seemmo.RecognizeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algo.seemmo.RecognizeRequest)
  return false;
#undef DO_
}

void RecognizeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algo.seemmo.RecognizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 videoChl = 1;
  if (this->videochl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->videochl(), output);
  }

  // bytes bgr24 = 2;
  if (this->bgr24().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->bgr24(), output);
  }

  // uint32 height = 3;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->height(), output);
  }

  // uint32 width = 4;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->width(), output);
  }

  // string param = 5;
  if (this->param().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->param().data(), static_cast<int>(this->param().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algo.seemmo.RecognizeRequest.param");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->param(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:algo.seemmo.RecognizeRequest)
}

::google::protobuf::uint8* RecognizeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:algo.seemmo.RecognizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 videoChl = 1;
  if (this->videochl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->videochl(), target);
  }

  // bytes bgr24 = 2;
  if (this->bgr24().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->bgr24(), target);
  }

  // uint32 height = 3;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->height(), target);
  }

  // uint32 width = 4;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->width(), target);
  }

  // string param = 5;
  if (this->param().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->param().data(), static_cast<int>(this->param().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algo.seemmo.RecognizeRequest.param");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->param(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algo.seemmo.RecognizeRequest)
  return target;
}

size_t RecognizeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algo.seemmo.RecognizeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes bgr24 = 2;
  if (this->bgr24().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bgr24());
  }

  // string param = 5;
  if (this->param().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->param());
  }

  // uint32 videoChl = 1;
  if (this->videochl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->videochl());
  }

  // uint32 height = 3;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height());
  }

  // uint32 width = 4;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecognizeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algo.seemmo.RecognizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RecognizeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecognizeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algo.seemmo.RecognizeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algo.seemmo.RecognizeRequest)
    MergeFrom(*source);
  }
}

void RecognizeRequest::MergeFrom(const RecognizeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algo.seemmo.RecognizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bgr24().size() > 0) {

    bgr24_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bgr24_);
  }
  if (from.param().size() > 0) {

    param_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param_);
  }
  if (from.videochl() != 0) {
    set_videochl(from.videochl());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
}

void RecognizeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algo.seemmo.RecognizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecognizeRequest::CopyFrom(const RecognizeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algo.seemmo.RecognizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecognizeRequest::IsInitialized() const {
  return true;
}

void RecognizeRequest::Swap(RecognizeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecognizeRequest::InternalSwap(RecognizeRequest* other) {
  using std::swap;
  bgr24_.Swap(&other->bgr24_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  param_.Swap(&other->param_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(videochl_, other->videochl_);
  swap(height_, other->height_);
  swap(width_, other->width_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RecognizeRequest::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecognizeReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecognizeReply::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecognizeReply::RecognizeReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_RecognizeReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:algo.seemmo.RecognizeReply)
}
RecognizeReply::RecognizeReply(const RecognizeReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:algo.seemmo.RecognizeReply)
}

void RecognizeReply::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RecognizeReply::~RecognizeReply() {
  // @@protoc_insertion_point(destructor:algo.seemmo.RecognizeReply)
  SharedDtor();
}

void RecognizeReply::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RecognizeReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RecognizeReply::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecognizeReply& RecognizeReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_RecognizeReply.base);
  return *internal_default_instance();
}


void RecognizeReply::Clear() {
// @@protoc_insertion_point(message_clear_start:algo.seemmo.RecognizeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RecognizeReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algo.seemmo.RecognizeReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "algo.seemmo.RecognizeReply.data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algo.seemmo.RecognizeReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algo.seemmo.RecognizeReply)
  return false;
#undef DO_
}

void RecognizeReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algo.seemmo.RecognizeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algo.seemmo.RecognizeReply.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:algo.seemmo.RecognizeReply)
}

::google::protobuf::uint8* RecognizeReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:algo.seemmo.RecognizeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algo.seemmo.RecognizeReply.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algo.seemmo.RecognizeReply)
  return target;
}

size_t RecognizeReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algo.seemmo.RecognizeReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecognizeReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algo.seemmo.RecognizeReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RecognizeReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecognizeReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algo.seemmo.RecognizeReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algo.seemmo.RecognizeReply)
    MergeFrom(*source);
  }
}

void RecognizeReply::MergeFrom(const RecognizeReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algo.seemmo.RecognizeReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void RecognizeReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algo.seemmo.RecognizeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecognizeReply::CopyFrom(const RecognizeReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algo.seemmo.RecognizeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecognizeReply::IsInitialized() const {
  return true;
}

void RecognizeReply::Swap(RecognizeReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecognizeReply::InternalSwap(RecognizeReply* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RecognizeReply::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImgRecognizeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImgRecognizeRequest::kImageIdFieldNumber;
const int ImgRecognizeRequest::kJpegFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImgRecognizeRequest::ImgRecognizeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_ImgRecognizeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:algo.seemmo.ImgRecognizeRequest)
}
ImgRecognizeRequest::ImgRecognizeRequest(const ImgRecognizeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  jpeg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.jpeg().size() > 0) {
    jpeg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jpeg_);
  }
  imageid_ = from.imageid_;
  // @@protoc_insertion_point(copy_constructor:algo.seemmo.ImgRecognizeRequest)
}

void ImgRecognizeRequest::SharedCtor() {
  jpeg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imageid_ = 0u;
}

ImgRecognizeRequest::~ImgRecognizeRequest() {
  // @@protoc_insertion_point(destructor:algo.seemmo.ImgRecognizeRequest)
  SharedDtor();
}

void ImgRecognizeRequest::SharedDtor() {
  jpeg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ImgRecognizeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImgRecognizeRequest::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImgRecognizeRequest& ImgRecognizeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_ImgRecognizeRequest.base);
  return *internal_default_instance();
}


void ImgRecognizeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:algo.seemmo.ImgRecognizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  jpeg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imageid_ = 0u;
  _internal_metadata_.Clear();
}

bool ImgRecognizeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algo.seemmo.ImgRecognizeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 imageId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes jpeg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_jpeg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algo.seemmo.ImgRecognizeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algo.seemmo.ImgRecognizeRequest)
  return false;
#undef DO_
}

void ImgRecognizeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algo.seemmo.ImgRecognizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 imageId = 1;
  if (this->imageid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->imageid(), output);
  }

  // bytes jpeg = 2;
  if (this->jpeg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->jpeg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:algo.seemmo.ImgRecognizeRequest)
}

::google::protobuf::uint8* ImgRecognizeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:algo.seemmo.ImgRecognizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 imageId = 1;
  if (this->imageid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->imageid(), target);
  }

  // bytes jpeg = 2;
  if (this->jpeg().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->jpeg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algo.seemmo.ImgRecognizeRequest)
  return target;
}

size_t ImgRecognizeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algo.seemmo.ImgRecognizeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes jpeg = 2;
  if (this->jpeg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->jpeg());
  }

  // uint32 imageId = 1;
  if (this->imageid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imageid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImgRecognizeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algo.seemmo.ImgRecognizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImgRecognizeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImgRecognizeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algo.seemmo.ImgRecognizeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algo.seemmo.ImgRecognizeRequest)
    MergeFrom(*source);
  }
}

void ImgRecognizeRequest::MergeFrom(const ImgRecognizeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algo.seemmo.ImgRecognizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.jpeg().size() > 0) {

    jpeg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jpeg_);
  }
  if (from.imageid() != 0) {
    set_imageid(from.imageid());
  }
}

void ImgRecognizeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algo.seemmo.ImgRecognizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImgRecognizeRequest::CopyFrom(const ImgRecognizeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algo.seemmo.ImgRecognizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImgRecognizeRequest::IsInitialized() const {
  return true;
}

void ImgRecognizeRequest::Swap(ImgRecognizeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImgRecognizeRequest::InternalSwap(ImgRecognizeRequest* other) {
  using std::swap;
  jpeg_.Swap(&other->jpeg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(imageid_, other->imageid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImgRecognizeRequest::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImgRecognizeReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImgRecognizeReply::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImgRecognizeReply::ImgRecognizeReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_ImgRecognizeReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:algo.seemmo.ImgRecognizeReply)
}
ImgRecognizeReply::ImgRecognizeReply(const ImgRecognizeReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:algo.seemmo.ImgRecognizeReply)
}

void ImgRecognizeReply::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ImgRecognizeReply::~ImgRecognizeReply() {
  // @@protoc_insertion_point(destructor:algo.seemmo.ImgRecognizeReply)
  SharedDtor();
}

void ImgRecognizeReply::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ImgRecognizeReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImgRecognizeReply::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImgRecognizeReply& ImgRecognizeReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_ImgRecognizeReply.base);
  return *internal_default_instance();
}


void ImgRecognizeReply::Clear() {
// @@protoc_insertion_point(message_clear_start:algo.seemmo.ImgRecognizeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ImgRecognizeReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algo.seemmo.ImgRecognizeReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "algo.seemmo.ImgRecognizeReply.data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algo.seemmo.ImgRecognizeReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algo.seemmo.ImgRecognizeReply)
  return false;
#undef DO_
}

void ImgRecognizeReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algo.seemmo.ImgRecognizeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algo.seemmo.ImgRecognizeReply.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:algo.seemmo.ImgRecognizeReply)
}

::google::protobuf::uint8* ImgRecognizeReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:algo.seemmo.ImgRecognizeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algo.seemmo.ImgRecognizeReply.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algo.seemmo.ImgRecognizeReply)
  return target;
}

size_t ImgRecognizeReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algo.seemmo.ImgRecognizeReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImgRecognizeReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algo.seemmo.ImgRecognizeReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ImgRecognizeReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImgRecognizeReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algo.seemmo.ImgRecognizeReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algo.seemmo.ImgRecognizeReply)
    MergeFrom(*source);
  }
}

void ImgRecognizeReply::MergeFrom(const ImgRecognizeReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algo.seemmo.ImgRecognizeReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void ImgRecognizeReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algo.seemmo.ImgRecognizeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImgRecognizeReply::CopyFrom(const ImgRecognizeReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algo.seemmo.ImgRecognizeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImgRecognizeReply::IsInitialized() const {
  return true;
}

void ImgRecognizeReply::Swap(ImgRecognizeReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImgRecognizeReply::InternalSwap(ImgRecognizeReply* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImgRecognizeReply::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

VideoProcService::~VideoProcService() {}

const ::google::protobuf::ServiceDescriptor* VideoProcService::descriptor() {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* VideoProcService::GetDescriptor() {
  return descriptor();
}

void VideoProcService::Trail(::google::protobuf::RpcController* controller,
                         const ::algo::seemmo::TrailRequest*,
                         ::algo::seemmo::TrailReply*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Trail() not implemented.");
  done->Run();
}

void VideoProcService::Recognize(::google::protobuf::RpcController* controller,
                         const ::algo::seemmo::RecognizeRequest*,
                         ::algo::seemmo::RecognizeReply*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Recognize() not implemented.");
  done->Run();
}

void VideoProcService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_service_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      Trail(controller,
             ::google::protobuf::down_cast<const ::algo::seemmo::TrailRequest*>(request),
             ::google::protobuf::down_cast< ::algo::seemmo::TrailReply*>(response),
             done);
      break;
    case 1:
      Recognize(controller,
             ::google::protobuf::down_cast<const ::algo::seemmo::RecognizeRequest*>(request),
             ::google::protobuf::down_cast< ::algo::seemmo::RecognizeReply*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& VideoProcService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::algo::seemmo::TrailRequest::default_instance();
    case 1:
      return ::algo::seemmo::RecognizeRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& VideoProcService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::algo::seemmo::TrailReply::default_instance();
    case 1:
      return ::algo::seemmo::RecognizeReply::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

VideoProcService_Stub::VideoProcService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
VideoProcService_Stub::VideoProcService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
VideoProcService_Stub::~VideoProcService_Stub() {
  if (owns_channel_) delete channel_;
}

void VideoProcService_Stub::Trail(::google::protobuf::RpcController* controller,
                              const ::algo::seemmo::TrailRequest* request,
                              ::algo::seemmo::TrailReply* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void VideoProcService_Stub::Recognize(::google::protobuf::RpcController* controller,
                              const ::algo::seemmo::RecognizeRequest* request,
                              ::algo::seemmo::RecognizeReply* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
// ===================================================================

ImgProcService::~ImgProcService() {}

const ::google::protobuf::ServiceDescriptor* ImgProcService::descriptor() {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2eproto::file_level_service_descriptors[1];
}

const ::google::protobuf::ServiceDescriptor* ImgProcService::GetDescriptor() {
  return descriptor();
}

void ImgProcService::Recognize(::google::protobuf::RpcController* controller,
                         const ::algo::seemmo::ImgRecognizeRequest*,
                         ::algo::seemmo::ImgRecognizeReply*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Recognize() not implemented.");
  done->Run();
}

void ImgProcService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_service_2eproto::file_level_service_descriptors[1]);
  switch(method->index()) {
    case 0:
      Recognize(controller,
             ::google::protobuf::down_cast<const ::algo::seemmo::ImgRecognizeRequest*>(request),
             ::google::protobuf::down_cast< ::algo::seemmo::ImgRecognizeReply*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& ImgProcService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::algo::seemmo::ImgRecognizeRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& ImgProcService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::algo::seemmo::ImgRecognizeReply::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

ImgProcService_Stub::ImgProcService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
ImgProcService_Stub::ImgProcService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
ImgProcService_Stub::~ImgProcService_Stub() {
  if (owns_channel_) delete channel_;
}

void ImgProcService_Stub::Recognize(::google::protobuf::RpcController* controller,
                              const ::algo::seemmo::ImgRecognizeRequest* request,
                              ::algo::seemmo::ImgRecognizeReply* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace seemmo
}  // namespace algo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::algo::seemmo::TrailRequest* Arena::CreateMaybeMessage< ::algo::seemmo::TrailRequest >(Arena* arena) {
  return Arena::CreateInternal< ::algo::seemmo::TrailRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::algo::seemmo::TrailReply* Arena::CreateMaybeMessage< ::algo::seemmo::TrailReply >(Arena* arena) {
  return Arena::CreateInternal< ::algo::seemmo::TrailReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::algo::seemmo::RecognizeRequest* Arena::CreateMaybeMessage< ::algo::seemmo::RecognizeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::algo::seemmo::RecognizeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::algo::seemmo::RecognizeReply* Arena::CreateMaybeMessage< ::algo::seemmo::RecognizeReply >(Arena* arena) {
  return Arena::CreateInternal< ::algo::seemmo::RecognizeReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::algo::seemmo::ImgRecognizeRequest* Arena::CreateMaybeMessage< ::algo::seemmo::ImgRecognizeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::algo::seemmo::ImgRecognizeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::algo::seemmo::ImgRecognizeReply* Arena::CreateMaybeMessage< ::algo::seemmo::ImgRecognizeReply >(Arena* arena) {
  return Arena::CreateInternal< ::algo::seemmo::ImgRecognizeReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
