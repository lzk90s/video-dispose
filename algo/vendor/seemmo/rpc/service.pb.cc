// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace algo {
namespace seemmo {
class TrailRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TrailRequest> {
} _TrailRequest_default_instance_;
class TrailReplyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TrailReply> {
} _TrailReply_default_instance_;
class TrailEndRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TrailEndRequest> {
} _TrailEndRequest_default_instance_;
class TrailEndReplyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TrailEndReply> {
} _TrailEndReply_default_instance_;
class RecognizeRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RecognizeRequest> {
} _RecognizeRequest_default_instance_;
class RecognizeReplyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RecognizeReply> {
} _RecognizeReply_default_instance_;
class ImgRecognizeRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ImgRecognizeRequest> {
} _ImgRecognizeRequest_default_instance_;
class ImgRecognizeReplyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ImgRecognizeReply> {
} _ImgRecognizeReply_default_instance_;

namespace protobuf_service_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[2];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrailRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrailRequest, videochl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrailRequest, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrailRequest, bgr24_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrailRequest, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrailRequest, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrailRequest, param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrailReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrailReply, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrailEndRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrailEndRequest, videochl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrailEndRequest, param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrailEndReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrailEndReply, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizeRequest, videochl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizeRequest, bgr24_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizeRequest, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizeRequest, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizeRequest, param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizeReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizeReply, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImgRecognizeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImgRecognizeRequest, imageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImgRecognizeRequest, jpeg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImgRecognizeReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImgRecognizeReply, data_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(TrailRequest)},
  { 10, -1, sizeof(TrailReply)},
  { 15, -1, sizeof(TrailEndRequest)},
  { 21, -1, sizeof(TrailEndReply)},
  { 26, -1, sizeof(RecognizeRequest)},
  { 35, -1, sizeof(RecognizeReply)},
  { 40, -1, sizeof(ImgRecognizeRequest)},
  { 46, -1, sizeof(ImgRecognizeReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_TrailRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TrailReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TrailEndRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TrailEndReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RecognizeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RecognizeReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ImgRecognizeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ImgRecognizeReply_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "service.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

}  // namespace

void TableStruct::Shutdown() {
  _TrailRequest_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _TrailReply_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _TrailEndRequest_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _TrailEndReply_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _RecognizeRequest_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _RecognizeReply_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _ImgRecognizeRequest_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _ImgRecognizeReply_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _TrailRequest_default_instance_.DefaultConstruct();
  _TrailReply_default_instance_.DefaultConstruct();
  _TrailEndRequest_default_instance_.DefaultConstruct();
  _TrailEndReply_default_instance_.DefaultConstruct();
  _RecognizeRequest_default_instance_.DefaultConstruct();
  _RecognizeReply_default_instance_.DefaultConstruct();
  _ImgRecognizeRequest_default_instance_.DefaultConstruct();
  _ImgRecognizeReply_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rservice.proto\022\013algo.seemmo\"p\n\014TrailReq"
      "uest\022\020\n\010videoChl\030\001 \001(\r\022\021\n\ttimestamp\030\002 \001("
      "\004\022\r\n\005bgr24\030\003 \001(\014\022\016\n\006height\030\004 \001(\r\022\r\n\005widt"
      "h\030\005 \001(\r\022\r\n\005param\030\006 \001(\t\"\032\n\nTrailReply\022\014\n\004"
      "data\030\001 \001(\t\"2\n\017TrailEndRequest\022\020\n\010videoCh"
      "l\030\001 \001(\r\022\r\n\005param\030\002 \001(\t\"\035\n\rTrailEndReply\022"
      "\014\n\004data\030\001 \001(\t\"a\n\020RecognizeRequest\022\020\n\010vid"
      "eoChl\030\001 \001(\r\022\r\n\005bgr24\030\002 \001(\014\022\016\n\006height\030\003 \001"
      "(\r\022\r\n\005width\030\004 \001(\r\022\r\n\005param\030\005 \001(\t\"\036\n\016Reco"
      "gnizeReply\022\014\n\004data\030\001 \001(\t\"4\n\023ImgRecognize"
      "Request\022\017\n\007imageId\030\001 \001(\r\022\014\n\004jpeg\030\002 \001(\014\"!"
      "\n\021ImgRecognizeReply\022\014\n\004data\030\001 \001(\t2\344\001\n\020Vi"
      "deoProcService\022=\n\005Trail\022\031.algo.seemmo.Tr"
      "ailRequest\032\027.algo.seemmo.TrailReply\"\000\022F\n"
      "\010TrailEnd\022\034.algo.seemmo.TrailEndRequest\032"
      "\032.algo.seemmo.TrailEndReply\"\000\022I\n\tRecogni"
      "ze\022\035.algo.seemmo.RecognizeRequest\032\033.algo"
      ".seemmo.RecognizeReply\"\0002a\n\016ImgProcServi"
      "ce\022O\n\tRecognize\022 .algo.seemmo.ImgRecogni"
      "zeRequest\032\036.algo.seemmo.ImgRecognizeRepl"
      "y\"\000B\003\200\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 816);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "service.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_service_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrailRequest::kVideoChlFieldNumber;
const int TrailRequest::kTimestampFieldNumber;
const int TrailRequest::kBgr24FieldNumber;
const int TrailRequest::kHeightFieldNumber;
const int TrailRequest::kWidthFieldNumber;
const int TrailRequest::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrailRequest::TrailRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:algo.seemmo.TrailRequest)
}
TrailRequest::TrailRequest(const TrailRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bgr24_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bgr24().size() > 0) {
    bgr24_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bgr24_);
  }
  param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.param().size() > 0) {
    param_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param_);
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    reinterpret_cast<char*>(&width_) -
    reinterpret_cast<char*>(&timestamp_) + sizeof(width_));
  // @@protoc_insertion_point(copy_constructor:algo.seemmo.TrailRequest)
}

void TrailRequest::SharedCtor() {
  bgr24_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, reinterpret_cast<char*>(&width_) -
    reinterpret_cast<char*>(&timestamp_) + sizeof(width_));
  _cached_size_ = 0;
}

TrailRequest::~TrailRequest() {
  // @@protoc_insertion_point(destructor:algo.seemmo.TrailRequest)
  SharedDtor();
}

void TrailRequest::SharedDtor() {
  bgr24_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TrailRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrailRequest::descriptor() {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2eproto::file_level_metadata[0].descriptor;
}

const TrailRequest& TrailRequest::default_instance() {
  protobuf_service_2eproto::InitDefaults();
  return *internal_default_instance();
}

TrailRequest* TrailRequest::New(::google::protobuf::Arena* arena) const {
  TrailRequest* n = new TrailRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:algo.seemmo.TrailRequest)
  bgr24_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, reinterpret_cast<char*>(&width_) -
    reinterpret_cast<char*>(&timestamp_) + sizeof(width_));
}

bool TrailRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algo.seemmo.TrailRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 videoChl = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &videochl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 timestamp = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes bgr24 = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bgr24()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 height = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 width = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string param = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->param().data(), this->param().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "algo.seemmo.TrailRequest.param"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algo.seemmo.TrailRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algo.seemmo.TrailRequest)
  return false;
#undef DO_
}

void TrailRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algo.seemmo.TrailRequest)
  // uint32 videoChl = 1;
  if (this->videochl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->videochl(), output);
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->timestamp(), output);
  }

  // bytes bgr24 = 3;
  if (this->bgr24().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->bgr24(), output);
  }

  // uint32 height = 4;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->height(), output);
  }

  // uint32 width = 5;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->width(), output);
  }

  // string param = 6;
  if (this->param().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->param().data(), this->param().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algo.seemmo.TrailRequest.param");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->param(), output);
  }

  // @@protoc_insertion_point(serialize_end:algo.seemmo.TrailRequest)
}

::google::protobuf::uint8* TrailRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:algo.seemmo.TrailRequest)
  // uint32 videoChl = 1;
  if (this->videochl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->videochl(), target);
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->timestamp(), target);
  }

  // bytes bgr24 = 3;
  if (this->bgr24().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->bgr24(), target);
  }

  // uint32 height = 4;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->height(), target);
  }

  // uint32 width = 5;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->width(), target);
  }

  // string param = 6;
  if (this->param().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->param().data(), this->param().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algo.seemmo.TrailRequest.param");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->param(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:algo.seemmo.TrailRequest)
  return target;
}

size_t TrailRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algo.seemmo.TrailRequest)
  size_t total_size = 0;

  // bytes bgr24 = 3;
  if (this->bgr24().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bgr24());
  }

  // string param = 6;
  if (this->param().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->param());
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  // uint32 videoChl = 1;
  if (this->videochl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->videochl());
  }

  // uint32 height = 4;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height());
  }

  // uint32 width = 5;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrailRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algo.seemmo.TrailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TrailRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrailRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algo.seemmo.TrailRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algo.seemmo.TrailRequest)
    MergeFrom(*source);
  }
}

void TrailRequest::MergeFrom(const TrailRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algo.seemmo.TrailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.bgr24().size() > 0) {

    bgr24_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bgr24_);
  }
  if (from.param().size() > 0) {

    param_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.videochl() != 0) {
    set_videochl(from.videochl());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
}

void TrailRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algo.seemmo.TrailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrailRequest::CopyFrom(const TrailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algo.seemmo.TrailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrailRequest::IsInitialized() const {
  return true;
}

void TrailRequest::Swap(TrailRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrailRequest::InternalSwap(TrailRequest* other) {
  bgr24_.Swap(&other->bgr24_);
  param_.Swap(&other->param_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(videochl_, other->videochl_);
  std::swap(height_, other->height_);
  std::swap(width_, other->width_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrailRequest::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrailRequest

// uint32 videoChl = 1;
void TrailRequest::clear_videochl() {
  videochl_ = 0u;
}
::google::protobuf::uint32 TrailRequest::videochl() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.TrailRequest.videoChl)
  return videochl_;
}
void TrailRequest::set_videochl(::google::protobuf::uint32 value) {
  
  videochl_ = value;
  // @@protoc_insertion_point(field_set:algo.seemmo.TrailRequest.videoChl)
}

// uint64 timestamp = 2;
void TrailRequest::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TrailRequest::timestamp() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.TrailRequest.timestamp)
  return timestamp_;
}
void TrailRequest::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:algo.seemmo.TrailRequest.timestamp)
}

// bytes bgr24 = 3;
void TrailRequest::clear_bgr24() {
  bgr24_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TrailRequest::bgr24() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.TrailRequest.bgr24)
  return bgr24_.GetNoArena();
}
void TrailRequest::set_bgr24(const ::std::string& value) {
  
  bgr24_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:algo.seemmo.TrailRequest.bgr24)
}
#if LANG_CXX11
void TrailRequest::set_bgr24(::std::string&& value) {
  
  bgr24_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:algo.seemmo.TrailRequest.bgr24)
}
#endif
void TrailRequest::set_bgr24(const char* value) {
  
  bgr24_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:algo.seemmo.TrailRequest.bgr24)
}
void TrailRequest::set_bgr24(const void* value, size_t size) {
  
  bgr24_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:algo.seemmo.TrailRequest.bgr24)
}
::std::string* TrailRequest::mutable_bgr24() {
  
  // @@protoc_insertion_point(field_mutable:algo.seemmo.TrailRequest.bgr24)
  return bgr24_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TrailRequest::release_bgr24() {
  // @@protoc_insertion_point(field_release:algo.seemmo.TrailRequest.bgr24)
  
  return bgr24_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrailRequest::set_allocated_bgr24(::std::string* bgr24) {
  if (bgr24 != NULL) {
    
  } else {
    
  }
  bgr24_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bgr24);
  // @@protoc_insertion_point(field_set_allocated:algo.seemmo.TrailRequest.bgr24)
}

// uint32 height = 4;
void TrailRequest::clear_height() {
  height_ = 0u;
}
::google::protobuf::uint32 TrailRequest::height() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.TrailRequest.height)
  return height_;
}
void TrailRequest::set_height(::google::protobuf::uint32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:algo.seemmo.TrailRequest.height)
}

// uint32 width = 5;
void TrailRequest::clear_width() {
  width_ = 0u;
}
::google::protobuf::uint32 TrailRequest::width() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.TrailRequest.width)
  return width_;
}
void TrailRequest::set_width(::google::protobuf::uint32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:algo.seemmo.TrailRequest.width)
}

// string param = 6;
void TrailRequest::clear_param() {
  param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TrailRequest::param() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.TrailRequest.param)
  return param_.GetNoArena();
}
void TrailRequest::set_param(const ::std::string& value) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:algo.seemmo.TrailRequest.param)
}
#if LANG_CXX11
void TrailRequest::set_param(::std::string&& value) {
  
  param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:algo.seemmo.TrailRequest.param)
}
#endif
void TrailRequest::set_param(const char* value) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:algo.seemmo.TrailRequest.param)
}
void TrailRequest::set_param(const char* value, size_t size) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:algo.seemmo.TrailRequest.param)
}
::std::string* TrailRequest::mutable_param() {
  
  // @@protoc_insertion_point(field_mutable:algo.seemmo.TrailRequest.param)
  return param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TrailRequest::release_param() {
  // @@protoc_insertion_point(field_release:algo.seemmo.TrailRequest.param)
  
  return param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrailRequest::set_allocated_param(::std::string* param) {
  if (param != NULL) {
    
  } else {
    
  }
  param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param);
  // @@protoc_insertion_point(field_set_allocated:algo.seemmo.TrailRequest.param)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrailReply::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrailReply::TrailReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:algo.seemmo.TrailReply)
}
TrailReply::TrailReply(const TrailReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:algo.seemmo.TrailReply)
}

void TrailReply::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TrailReply::~TrailReply() {
  // @@protoc_insertion_point(destructor:algo.seemmo.TrailReply)
  SharedDtor();
}

void TrailReply::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TrailReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrailReply::descriptor() {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2eproto::file_level_metadata[1].descriptor;
}

const TrailReply& TrailReply::default_instance() {
  protobuf_service_2eproto::InitDefaults();
  return *internal_default_instance();
}

TrailReply* TrailReply::New(::google::protobuf::Arena* arena) const {
  TrailReply* n = new TrailReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrailReply::Clear() {
// @@protoc_insertion_point(message_clear_start:algo.seemmo.TrailReply)
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TrailReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algo.seemmo.TrailReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string data = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "algo.seemmo.TrailReply.data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algo.seemmo.TrailReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algo.seemmo.TrailReply)
  return false;
#undef DO_
}

void TrailReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algo.seemmo.TrailReply)
  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algo.seemmo.TrailReply.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:algo.seemmo.TrailReply)
}

::google::protobuf::uint8* TrailReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:algo.seemmo.TrailReply)
  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algo.seemmo.TrailReply.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:algo.seemmo.TrailReply)
  return target;
}

size_t TrailReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algo.seemmo.TrailReply)
  size_t total_size = 0;

  // string data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrailReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algo.seemmo.TrailReply)
  GOOGLE_DCHECK_NE(&from, this);
  const TrailReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrailReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algo.seemmo.TrailReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algo.seemmo.TrailReply)
    MergeFrom(*source);
  }
}

void TrailReply::MergeFrom(const TrailReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algo.seemmo.TrailReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void TrailReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algo.seemmo.TrailReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrailReply::CopyFrom(const TrailReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algo.seemmo.TrailReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrailReply::IsInitialized() const {
  return true;
}

void TrailReply::Swap(TrailReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrailReply::InternalSwap(TrailReply* other) {
  data_.Swap(&other->data_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrailReply::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrailReply

// string data = 1;
void TrailReply::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TrailReply::data() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.TrailReply.data)
  return data_.GetNoArena();
}
void TrailReply::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:algo.seemmo.TrailReply.data)
}
#if LANG_CXX11
void TrailReply::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:algo.seemmo.TrailReply.data)
}
#endif
void TrailReply::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:algo.seemmo.TrailReply.data)
}
void TrailReply::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:algo.seemmo.TrailReply.data)
}
::std::string* TrailReply::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:algo.seemmo.TrailReply.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TrailReply::release_data() {
  // @@protoc_insertion_point(field_release:algo.seemmo.TrailReply.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrailReply::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:algo.seemmo.TrailReply.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrailEndRequest::kVideoChlFieldNumber;
const int TrailEndRequest::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrailEndRequest::TrailEndRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:algo.seemmo.TrailEndRequest)
}
TrailEndRequest::TrailEndRequest(const TrailEndRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.param().size() > 0) {
    param_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param_);
  }
  videochl_ = from.videochl_;
  // @@protoc_insertion_point(copy_constructor:algo.seemmo.TrailEndRequest)
}

void TrailEndRequest::SharedCtor() {
  param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  videochl_ = 0u;
  _cached_size_ = 0;
}

TrailEndRequest::~TrailEndRequest() {
  // @@protoc_insertion_point(destructor:algo.seemmo.TrailEndRequest)
  SharedDtor();
}

void TrailEndRequest::SharedDtor() {
  param_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TrailEndRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrailEndRequest::descriptor() {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2eproto::file_level_metadata[2].descriptor;
}

const TrailEndRequest& TrailEndRequest::default_instance() {
  protobuf_service_2eproto::InitDefaults();
  return *internal_default_instance();
}

TrailEndRequest* TrailEndRequest::New(::google::protobuf::Arena* arena) const {
  TrailEndRequest* n = new TrailEndRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrailEndRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:algo.seemmo.TrailEndRequest)
  param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  videochl_ = 0u;
}

bool TrailEndRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algo.seemmo.TrailEndRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 videoChl = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &videochl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string param = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->param().data(), this->param().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "algo.seemmo.TrailEndRequest.param"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algo.seemmo.TrailEndRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algo.seemmo.TrailEndRequest)
  return false;
#undef DO_
}

void TrailEndRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algo.seemmo.TrailEndRequest)
  // uint32 videoChl = 1;
  if (this->videochl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->videochl(), output);
  }

  // string param = 2;
  if (this->param().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->param().data(), this->param().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algo.seemmo.TrailEndRequest.param");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->param(), output);
  }

  // @@protoc_insertion_point(serialize_end:algo.seemmo.TrailEndRequest)
}

::google::protobuf::uint8* TrailEndRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:algo.seemmo.TrailEndRequest)
  // uint32 videoChl = 1;
  if (this->videochl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->videochl(), target);
  }

  // string param = 2;
  if (this->param().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->param().data(), this->param().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algo.seemmo.TrailEndRequest.param");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->param(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:algo.seemmo.TrailEndRequest)
  return target;
}

size_t TrailEndRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algo.seemmo.TrailEndRequest)
  size_t total_size = 0;

  // string param = 2;
  if (this->param().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->param());
  }

  // uint32 videoChl = 1;
  if (this->videochl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->videochl());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrailEndRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algo.seemmo.TrailEndRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TrailEndRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrailEndRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algo.seemmo.TrailEndRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algo.seemmo.TrailEndRequest)
    MergeFrom(*source);
  }
}

void TrailEndRequest::MergeFrom(const TrailEndRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algo.seemmo.TrailEndRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.param().size() > 0) {

    param_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param_);
  }
  if (from.videochl() != 0) {
    set_videochl(from.videochl());
  }
}

void TrailEndRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algo.seemmo.TrailEndRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrailEndRequest::CopyFrom(const TrailEndRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algo.seemmo.TrailEndRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrailEndRequest::IsInitialized() const {
  return true;
}

void TrailEndRequest::Swap(TrailEndRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrailEndRequest::InternalSwap(TrailEndRequest* other) {
  param_.Swap(&other->param_);
  std::swap(videochl_, other->videochl_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrailEndRequest::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrailEndRequest

// uint32 videoChl = 1;
void TrailEndRequest::clear_videochl() {
  videochl_ = 0u;
}
::google::protobuf::uint32 TrailEndRequest::videochl() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.TrailEndRequest.videoChl)
  return videochl_;
}
void TrailEndRequest::set_videochl(::google::protobuf::uint32 value) {
  
  videochl_ = value;
  // @@protoc_insertion_point(field_set:algo.seemmo.TrailEndRequest.videoChl)
}

// string param = 2;
void TrailEndRequest::clear_param() {
  param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TrailEndRequest::param() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.TrailEndRequest.param)
  return param_.GetNoArena();
}
void TrailEndRequest::set_param(const ::std::string& value) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:algo.seemmo.TrailEndRequest.param)
}
#if LANG_CXX11
void TrailEndRequest::set_param(::std::string&& value) {
  
  param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:algo.seemmo.TrailEndRequest.param)
}
#endif
void TrailEndRequest::set_param(const char* value) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:algo.seemmo.TrailEndRequest.param)
}
void TrailEndRequest::set_param(const char* value, size_t size) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:algo.seemmo.TrailEndRequest.param)
}
::std::string* TrailEndRequest::mutable_param() {
  
  // @@protoc_insertion_point(field_mutable:algo.seemmo.TrailEndRequest.param)
  return param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TrailEndRequest::release_param() {
  // @@protoc_insertion_point(field_release:algo.seemmo.TrailEndRequest.param)
  
  return param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrailEndRequest::set_allocated_param(::std::string* param) {
  if (param != NULL) {
    
  } else {
    
  }
  param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param);
  // @@protoc_insertion_point(field_set_allocated:algo.seemmo.TrailEndRequest.param)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrailEndReply::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrailEndReply::TrailEndReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:algo.seemmo.TrailEndReply)
}
TrailEndReply::TrailEndReply(const TrailEndReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:algo.seemmo.TrailEndReply)
}

void TrailEndReply::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TrailEndReply::~TrailEndReply() {
  // @@protoc_insertion_point(destructor:algo.seemmo.TrailEndReply)
  SharedDtor();
}

void TrailEndReply::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TrailEndReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrailEndReply::descriptor() {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2eproto::file_level_metadata[3].descriptor;
}

const TrailEndReply& TrailEndReply::default_instance() {
  protobuf_service_2eproto::InitDefaults();
  return *internal_default_instance();
}

TrailEndReply* TrailEndReply::New(::google::protobuf::Arena* arena) const {
  TrailEndReply* n = new TrailEndReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrailEndReply::Clear() {
// @@protoc_insertion_point(message_clear_start:algo.seemmo.TrailEndReply)
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TrailEndReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algo.seemmo.TrailEndReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string data = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "algo.seemmo.TrailEndReply.data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algo.seemmo.TrailEndReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algo.seemmo.TrailEndReply)
  return false;
#undef DO_
}

void TrailEndReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algo.seemmo.TrailEndReply)
  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algo.seemmo.TrailEndReply.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:algo.seemmo.TrailEndReply)
}

::google::protobuf::uint8* TrailEndReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:algo.seemmo.TrailEndReply)
  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algo.seemmo.TrailEndReply.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:algo.seemmo.TrailEndReply)
  return target;
}

size_t TrailEndReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algo.seemmo.TrailEndReply)
  size_t total_size = 0;

  // string data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrailEndReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algo.seemmo.TrailEndReply)
  GOOGLE_DCHECK_NE(&from, this);
  const TrailEndReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrailEndReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algo.seemmo.TrailEndReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algo.seemmo.TrailEndReply)
    MergeFrom(*source);
  }
}

void TrailEndReply::MergeFrom(const TrailEndReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algo.seemmo.TrailEndReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void TrailEndReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algo.seemmo.TrailEndReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrailEndReply::CopyFrom(const TrailEndReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algo.seemmo.TrailEndReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrailEndReply::IsInitialized() const {
  return true;
}

void TrailEndReply::Swap(TrailEndReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrailEndReply::InternalSwap(TrailEndReply* other) {
  data_.Swap(&other->data_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrailEndReply::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrailEndReply

// string data = 1;
void TrailEndReply::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TrailEndReply::data() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.TrailEndReply.data)
  return data_.GetNoArena();
}
void TrailEndReply::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:algo.seemmo.TrailEndReply.data)
}
#if LANG_CXX11
void TrailEndReply::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:algo.seemmo.TrailEndReply.data)
}
#endif
void TrailEndReply::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:algo.seemmo.TrailEndReply.data)
}
void TrailEndReply::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:algo.seemmo.TrailEndReply.data)
}
::std::string* TrailEndReply::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:algo.seemmo.TrailEndReply.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TrailEndReply::release_data() {
  // @@protoc_insertion_point(field_release:algo.seemmo.TrailEndReply.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrailEndReply::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:algo.seemmo.TrailEndReply.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecognizeRequest::kVideoChlFieldNumber;
const int RecognizeRequest::kBgr24FieldNumber;
const int RecognizeRequest::kHeightFieldNumber;
const int RecognizeRequest::kWidthFieldNumber;
const int RecognizeRequest::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecognizeRequest::RecognizeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:algo.seemmo.RecognizeRequest)
}
RecognizeRequest::RecognizeRequest(const RecognizeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bgr24_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bgr24().size() > 0) {
    bgr24_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bgr24_);
  }
  param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.param().size() > 0) {
    param_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param_);
  }
  ::memcpy(&videochl_, &from.videochl_,
    reinterpret_cast<char*>(&width_) -
    reinterpret_cast<char*>(&videochl_) + sizeof(width_));
  // @@protoc_insertion_point(copy_constructor:algo.seemmo.RecognizeRequest)
}

void RecognizeRequest::SharedCtor() {
  bgr24_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&videochl_, 0, reinterpret_cast<char*>(&width_) -
    reinterpret_cast<char*>(&videochl_) + sizeof(width_));
  _cached_size_ = 0;
}

RecognizeRequest::~RecognizeRequest() {
  // @@protoc_insertion_point(destructor:algo.seemmo.RecognizeRequest)
  SharedDtor();
}

void RecognizeRequest::SharedDtor() {
  bgr24_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RecognizeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecognizeRequest::descriptor() {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2eproto::file_level_metadata[4].descriptor;
}

const RecognizeRequest& RecognizeRequest::default_instance() {
  protobuf_service_2eproto::InitDefaults();
  return *internal_default_instance();
}

RecognizeRequest* RecognizeRequest::New(::google::protobuf::Arena* arena) const {
  RecognizeRequest* n = new RecognizeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecognizeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:algo.seemmo.RecognizeRequest)
  bgr24_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&videochl_, 0, reinterpret_cast<char*>(&width_) -
    reinterpret_cast<char*>(&videochl_) + sizeof(width_));
}

bool RecognizeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algo.seemmo.RecognizeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 videoChl = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &videochl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes bgr24 = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bgr24()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 height = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 width = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string param = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->param().data(), this->param().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "algo.seemmo.RecognizeRequest.param"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algo.seemmo.RecognizeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algo.seemmo.RecognizeRequest)
  return false;
#undef DO_
}

void RecognizeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algo.seemmo.RecognizeRequest)
  // uint32 videoChl = 1;
  if (this->videochl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->videochl(), output);
  }

  // bytes bgr24 = 2;
  if (this->bgr24().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->bgr24(), output);
  }

  // uint32 height = 3;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->height(), output);
  }

  // uint32 width = 4;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->width(), output);
  }

  // string param = 5;
  if (this->param().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->param().data(), this->param().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algo.seemmo.RecognizeRequest.param");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->param(), output);
  }

  // @@protoc_insertion_point(serialize_end:algo.seemmo.RecognizeRequest)
}

::google::protobuf::uint8* RecognizeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:algo.seemmo.RecognizeRequest)
  // uint32 videoChl = 1;
  if (this->videochl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->videochl(), target);
  }

  // bytes bgr24 = 2;
  if (this->bgr24().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->bgr24(), target);
  }

  // uint32 height = 3;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->height(), target);
  }

  // uint32 width = 4;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->width(), target);
  }

  // string param = 5;
  if (this->param().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->param().data(), this->param().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algo.seemmo.RecognizeRequest.param");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->param(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:algo.seemmo.RecognizeRequest)
  return target;
}

size_t RecognizeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algo.seemmo.RecognizeRequest)
  size_t total_size = 0;

  // bytes bgr24 = 2;
  if (this->bgr24().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bgr24());
  }

  // string param = 5;
  if (this->param().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->param());
  }

  // uint32 videoChl = 1;
  if (this->videochl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->videochl());
  }

  // uint32 height = 3;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height());
  }

  // uint32 width = 4;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecognizeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algo.seemmo.RecognizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RecognizeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecognizeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algo.seemmo.RecognizeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algo.seemmo.RecognizeRequest)
    MergeFrom(*source);
  }
}

void RecognizeRequest::MergeFrom(const RecognizeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algo.seemmo.RecognizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.bgr24().size() > 0) {

    bgr24_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bgr24_);
  }
  if (from.param().size() > 0) {

    param_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param_);
  }
  if (from.videochl() != 0) {
    set_videochl(from.videochl());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
}

void RecognizeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algo.seemmo.RecognizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecognizeRequest::CopyFrom(const RecognizeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algo.seemmo.RecognizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecognizeRequest::IsInitialized() const {
  return true;
}

void RecognizeRequest::Swap(RecognizeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecognizeRequest::InternalSwap(RecognizeRequest* other) {
  bgr24_.Swap(&other->bgr24_);
  param_.Swap(&other->param_);
  std::swap(videochl_, other->videochl_);
  std::swap(height_, other->height_);
  std::swap(width_, other->width_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecognizeRequest::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RecognizeRequest

// uint32 videoChl = 1;
void RecognizeRequest::clear_videochl() {
  videochl_ = 0u;
}
::google::protobuf::uint32 RecognizeRequest::videochl() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.RecognizeRequest.videoChl)
  return videochl_;
}
void RecognizeRequest::set_videochl(::google::protobuf::uint32 value) {
  
  videochl_ = value;
  // @@protoc_insertion_point(field_set:algo.seemmo.RecognizeRequest.videoChl)
}

// bytes bgr24 = 2;
void RecognizeRequest::clear_bgr24() {
  bgr24_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RecognizeRequest::bgr24() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.RecognizeRequest.bgr24)
  return bgr24_.GetNoArena();
}
void RecognizeRequest::set_bgr24(const ::std::string& value) {
  
  bgr24_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:algo.seemmo.RecognizeRequest.bgr24)
}
#if LANG_CXX11
void RecognizeRequest::set_bgr24(::std::string&& value) {
  
  bgr24_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:algo.seemmo.RecognizeRequest.bgr24)
}
#endif
void RecognizeRequest::set_bgr24(const char* value) {
  
  bgr24_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:algo.seemmo.RecognizeRequest.bgr24)
}
void RecognizeRequest::set_bgr24(const void* value, size_t size) {
  
  bgr24_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:algo.seemmo.RecognizeRequest.bgr24)
}
::std::string* RecognizeRequest::mutable_bgr24() {
  
  // @@protoc_insertion_point(field_mutable:algo.seemmo.RecognizeRequest.bgr24)
  return bgr24_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RecognizeRequest::release_bgr24() {
  // @@protoc_insertion_point(field_release:algo.seemmo.RecognizeRequest.bgr24)
  
  return bgr24_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RecognizeRequest::set_allocated_bgr24(::std::string* bgr24) {
  if (bgr24 != NULL) {
    
  } else {
    
  }
  bgr24_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bgr24);
  // @@protoc_insertion_point(field_set_allocated:algo.seemmo.RecognizeRequest.bgr24)
}

// uint32 height = 3;
void RecognizeRequest::clear_height() {
  height_ = 0u;
}
::google::protobuf::uint32 RecognizeRequest::height() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.RecognizeRequest.height)
  return height_;
}
void RecognizeRequest::set_height(::google::protobuf::uint32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:algo.seemmo.RecognizeRequest.height)
}

// uint32 width = 4;
void RecognizeRequest::clear_width() {
  width_ = 0u;
}
::google::protobuf::uint32 RecognizeRequest::width() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.RecognizeRequest.width)
  return width_;
}
void RecognizeRequest::set_width(::google::protobuf::uint32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:algo.seemmo.RecognizeRequest.width)
}

// string param = 5;
void RecognizeRequest::clear_param() {
  param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RecognizeRequest::param() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.RecognizeRequest.param)
  return param_.GetNoArena();
}
void RecognizeRequest::set_param(const ::std::string& value) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:algo.seemmo.RecognizeRequest.param)
}
#if LANG_CXX11
void RecognizeRequest::set_param(::std::string&& value) {
  
  param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:algo.seemmo.RecognizeRequest.param)
}
#endif
void RecognizeRequest::set_param(const char* value) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:algo.seemmo.RecognizeRequest.param)
}
void RecognizeRequest::set_param(const char* value, size_t size) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:algo.seemmo.RecognizeRequest.param)
}
::std::string* RecognizeRequest::mutable_param() {
  
  // @@protoc_insertion_point(field_mutable:algo.seemmo.RecognizeRequest.param)
  return param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RecognizeRequest::release_param() {
  // @@protoc_insertion_point(field_release:algo.seemmo.RecognizeRequest.param)
  
  return param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RecognizeRequest::set_allocated_param(::std::string* param) {
  if (param != NULL) {
    
  } else {
    
  }
  param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param);
  // @@protoc_insertion_point(field_set_allocated:algo.seemmo.RecognizeRequest.param)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecognizeReply::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecognizeReply::RecognizeReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:algo.seemmo.RecognizeReply)
}
RecognizeReply::RecognizeReply(const RecognizeReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:algo.seemmo.RecognizeReply)
}

void RecognizeReply::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RecognizeReply::~RecognizeReply() {
  // @@protoc_insertion_point(destructor:algo.seemmo.RecognizeReply)
  SharedDtor();
}

void RecognizeReply::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RecognizeReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecognizeReply::descriptor() {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2eproto::file_level_metadata[5].descriptor;
}

const RecognizeReply& RecognizeReply::default_instance() {
  protobuf_service_2eproto::InitDefaults();
  return *internal_default_instance();
}

RecognizeReply* RecognizeReply::New(::google::protobuf::Arena* arena) const {
  RecognizeReply* n = new RecognizeReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecognizeReply::Clear() {
// @@protoc_insertion_point(message_clear_start:algo.seemmo.RecognizeReply)
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RecognizeReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algo.seemmo.RecognizeReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string data = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "algo.seemmo.RecognizeReply.data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algo.seemmo.RecognizeReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algo.seemmo.RecognizeReply)
  return false;
#undef DO_
}

void RecognizeReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algo.seemmo.RecognizeReply)
  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algo.seemmo.RecognizeReply.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:algo.seemmo.RecognizeReply)
}

::google::protobuf::uint8* RecognizeReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:algo.seemmo.RecognizeReply)
  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algo.seemmo.RecognizeReply.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:algo.seemmo.RecognizeReply)
  return target;
}

size_t RecognizeReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algo.seemmo.RecognizeReply)
  size_t total_size = 0;

  // string data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecognizeReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algo.seemmo.RecognizeReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RecognizeReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecognizeReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algo.seemmo.RecognizeReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algo.seemmo.RecognizeReply)
    MergeFrom(*source);
  }
}

void RecognizeReply::MergeFrom(const RecognizeReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algo.seemmo.RecognizeReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void RecognizeReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algo.seemmo.RecognizeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecognizeReply::CopyFrom(const RecognizeReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algo.seemmo.RecognizeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecognizeReply::IsInitialized() const {
  return true;
}

void RecognizeReply::Swap(RecognizeReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecognizeReply::InternalSwap(RecognizeReply* other) {
  data_.Swap(&other->data_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecognizeReply::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RecognizeReply

// string data = 1;
void RecognizeReply::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RecognizeReply::data() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.RecognizeReply.data)
  return data_.GetNoArena();
}
void RecognizeReply::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:algo.seemmo.RecognizeReply.data)
}
#if LANG_CXX11
void RecognizeReply::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:algo.seemmo.RecognizeReply.data)
}
#endif
void RecognizeReply::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:algo.seemmo.RecognizeReply.data)
}
void RecognizeReply::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:algo.seemmo.RecognizeReply.data)
}
::std::string* RecognizeReply::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:algo.seemmo.RecognizeReply.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RecognizeReply::release_data() {
  // @@protoc_insertion_point(field_release:algo.seemmo.RecognizeReply.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RecognizeReply::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:algo.seemmo.RecognizeReply.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImgRecognizeRequest::kImageIdFieldNumber;
const int ImgRecognizeRequest::kJpegFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImgRecognizeRequest::ImgRecognizeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:algo.seemmo.ImgRecognizeRequest)
}
ImgRecognizeRequest::ImgRecognizeRequest(const ImgRecognizeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  jpeg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.jpeg().size() > 0) {
    jpeg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jpeg_);
  }
  imageid_ = from.imageid_;
  // @@protoc_insertion_point(copy_constructor:algo.seemmo.ImgRecognizeRequest)
}

void ImgRecognizeRequest::SharedCtor() {
  jpeg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imageid_ = 0u;
  _cached_size_ = 0;
}

ImgRecognizeRequest::~ImgRecognizeRequest() {
  // @@protoc_insertion_point(destructor:algo.seemmo.ImgRecognizeRequest)
  SharedDtor();
}

void ImgRecognizeRequest::SharedDtor() {
  jpeg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ImgRecognizeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImgRecognizeRequest::descriptor() {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2eproto::file_level_metadata[6].descriptor;
}

const ImgRecognizeRequest& ImgRecognizeRequest::default_instance() {
  protobuf_service_2eproto::InitDefaults();
  return *internal_default_instance();
}

ImgRecognizeRequest* ImgRecognizeRequest::New(::google::protobuf::Arena* arena) const {
  ImgRecognizeRequest* n = new ImgRecognizeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImgRecognizeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:algo.seemmo.ImgRecognizeRequest)
  jpeg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imageid_ = 0u;
}

bool ImgRecognizeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algo.seemmo.ImgRecognizeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 imageId = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes jpeg = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_jpeg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algo.seemmo.ImgRecognizeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algo.seemmo.ImgRecognizeRequest)
  return false;
#undef DO_
}

void ImgRecognizeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algo.seemmo.ImgRecognizeRequest)
  // uint32 imageId = 1;
  if (this->imageid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->imageid(), output);
  }

  // bytes jpeg = 2;
  if (this->jpeg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->jpeg(), output);
  }

  // @@protoc_insertion_point(serialize_end:algo.seemmo.ImgRecognizeRequest)
}

::google::protobuf::uint8* ImgRecognizeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:algo.seemmo.ImgRecognizeRequest)
  // uint32 imageId = 1;
  if (this->imageid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->imageid(), target);
  }

  // bytes jpeg = 2;
  if (this->jpeg().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->jpeg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:algo.seemmo.ImgRecognizeRequest)
  return target;
}

size_t ImgRecognizeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algo.seemmo.ImgRecognizeRequest)
  size_t total_size = 0;

  // bytes jpeg = 2;
  if (this->jpeg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->jpeg());
  }

  // uint32 imageId = 1;
  if (this->imageid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imageid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImgRecognizeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algo.seemmo.ImgRecognizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImgRecognizeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImgRecognizeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algo.seemmo.ImgRecognizeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algo.seemmo.ImgRecognizeRequest)
    MergeFrom(*source);
  }
}

void ImgRecognizeRequest::MergeFrom(const ImgRecognizeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algo.seemmo.ImgRecognizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.jpeg().size() > 0) {

    jpeg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jpeg_);
  }
  if (from.imageid() != 0) {
    set_imageid(from.imageid());
  }
}

void ImgRecognizeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algo.seemmo.ImgRecognizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImgRecognizeRequest::CopyFrom(const ImgRecognizeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algo.seemmo.ImgRecognizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImgRecognizeRequest::IsInitialized() const {
  return true;
}

void ImgRecognizeRequest::Swap(ImgRecognizeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImgRecognizeRequest::InternalSwap(ImgRecognizeRequest* other) {
  jpeg_.Swap(&other->jpeg_);
  std::swap(imageid_, other->imageid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImgRecognizeRequest::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ImgRecognizeRequest

// uint32 imageId = 1;
void ImgRecognizeRequest::clear_imageid() {
  imageid_ = 0u;
}
::google::protobuf::uint32 ImgRecognizeRequest::imageid() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.ImgRecognizeRequest.imageId)
  return imageid_;
}
void ImgRecognizeRequest::set_imageid(::google::protobuf::uint32 value) {
  
  imageid_ = value;
  // @@protoc_insertion_point(field_set:algo.seemmo.ImgRecognizeRequest.imageId)
}

// bytes jpeg = 2;
void ImgRecognizeRequest::clear_jpeg() {
  jpeg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ImgRecognizeRequest::jpeg() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.ImgRecognizeRequest.jpeg)
  return jpeg_.GetNoArena();
}
void ImgRecognizeRequest::set_jpeg(const ::std::string& value) {
  
  jpeg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:algo.seemmo.ImgRecognizeRequest.jpeg)
}
#if LANG_CXX11
void ImgRecognizeRequest::set_jpeg(::std::string&& value) {
  
  jpeg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:algo.seemmo.ImgRecognizeRequest.jpeg)
}
#endif
void ImgRecognizeRequest::set_jpeg(const char* value) {
  
  jpeg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:algo.seemmo.ImgRecognizeRequest.jpeg)
}
void ImgRecognizeRequest::set_jpeg(const void* value, size_t size) {
  
  jpeg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:algo.seemmo.ImgRecognizeRequest.jpeg)
}
::std::string* ImgRecognizeRequest::mutable_jpeg() {
  
  // @@protoc_insertion_point(field_mutable:algo.seemmo.ImgRecognizeRequest.jpeg)
  return jpeg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ImgRecognizeRequest::release_jpeg() {
  // @@protoc_insertion_point(field_release:algo.seemmo.ImgRecognizeRequest.jpeg)
  
  return jpeg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ImgRecognizeRequest::set_allocated_jpeg(::std::string* jpeg) {
  if (jpeg != NULL) {
    
  } else {
    
  }
  jpeg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jpeg);
  // @@protoc_insertion_point(field_set_allocated:algo.seemmo.ImgRecognizeRequest.jpeg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImgRecognizeReply::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImgRecognizeReply::ImgRecognizeReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:algo.seemmo.ImgRecognizeReply)
}
ImgRecognizeReply::ImgRecognizeReply(const ImgRecognizeReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:algo.seemmo.ImgRecognizeReply)
}

void ImgRecognizeReply::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ImgRecognizeReply::~ImgRecognizeReply() {
  // @@protoc_insertion_point(destructor:algo.seemmo.ImgRecognizeReply)
  SharedDtor();
}

void ImgRecognizeReply::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ImgRecognizeReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImgRecognizeReply::descriptor() {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2eproto::file_level_metadata[7].descriptor;
}

const ImgRecognizeReply& ImgRecognizeReply::default_instance() {
  protobuf_service_2eproto::InitDefaults();
  return *internal_default_instance();
}

ImgRecognizeReply* ImgRecognizeReply::New(::google::protobuf::Arena* arena) const {
  ImgRecognizeReply* n = new ImgRecognizeReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImgRecognizeReply::Clear() {
// @@protoc_insertion_point(message_clear_start:algo.seemmo.ImgRecognizeReply)
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ImgRecognizeReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algo.seemmo.ImgRecognizeReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string data = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "algo.seemmo.ImgRecognizeReply.data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algo.seemmo.ImgRecognizeReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algo.seemmo.ImgRecognizeReply)
  return false;
#undef DO_
}

void ImgRecognizeReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algo.seemmo.ImgRecognizeReply)
  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algo.seemmo.ImgRecognizeReply.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:algo.seemmo.ImgRecognizeReply)
}

::google::protobuf::uint8* ImgRecognizeReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:algo.seemmo.ImgRecognizeReply)
  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "algo.seemmo.ImgRecognizeReply.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:algo.seemmo.ImgRecognizeReply)
  return target;
}

size_t ImgRecognizeReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algo.seemmo.ImgRecognizeReply)
  size_t total_size = 0;

  // string data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImgRecognizeReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algo.seemmo.ImgRecognizeReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ImgRecognizeReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImgRecognizeReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algo.seemmo.ImgRecognizeReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algo.seemmo.ImgRecognizeReply)
    MergeFrom(*source);
  }
}

void ImgRecognizeReply::MergeFrom(const ImgRecognizeReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algo.seemmo.ImgRecognizeReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void ImgRecognizeReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algo.seemmo.ImgRecognizeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImgRecognizeReply::CopyFrom(const ImgRecognizeReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algo.seemmo.ImgRecognizeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImgRecognizeReply::IsInitialized() const {
  return true;
}

void ImgRecognizeReply::Swap(ImgRecognizeReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImgRecognizeReply::InternalSwap(ImgRecognizeReply* other) {
  data_.Swap(&other->data_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImgRecognizeReply::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ImgRecognizeReply

// string data = 1;
void ImgRecognizeReply::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ImgRecognizeReply::data() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.ImgRecognizeReply.data)
  return data_.GetNoArena();
}
void ImgRecognizeReply::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:algo.seemmo.ImgRecognizeReply.data)
}
#if LANG_CXX11
void ImgRecognizeReply::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:algo.seemmo.ImgRecognizeReply.data)
}
#endif
void ImgRecognizeReply::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:algo.seemmo.ImgRecognizeReply.data)
}
void ImgRecognizeReply::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:algo.seemmo.ImgRecognizeReply.data)
}
::std::string* ImgRecognizeReply::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:algo.seemmo.ImgRecognizeReply.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ImgRecognizeReply::release_data() {
  // @@protoc_insertion_point(field_release:algo.seemmo.ImgRecognizeReply.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ImgRecognizeReply::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:algo.seemmo.ImgRecognizeReply.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

VideoProcService::~VideoProcService() {}

const ::google::protobuf::ServiceDescriptor* VideoProcService::descriptor() {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* VideoProcService::GetDescriptor() {
  return descriptor();
}

void VideoProcService::Trail(::google::protobuf::RpcController* controller,
                         const ::algo::seemmo::TrailRequest*,
                         ::algo::seemmo::TrailReply*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Trail() not implemented.");
  done->Run();
}

void VideoProcService::TrailEnd(::google::protobuf::RpcController* controller,
                         const ::algo::seemmo::TrailEndRequest*,
                         ::algo::seemmo::TrailEndReply*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method TrailEnd() not implemented.");
  done->Run();
}

void VideoProcService::Recognize(::google::protobuf::RpcController* controller,
                         const ::algo::seemmo::RecognizeRequest*,
                         ::algo::seemmo::RecognizeReply*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Recognize() not implemented.");
  done->Run();
}

void VideoProcService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_service_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      Trail(controller,
             ::google::protobuf::down_cast<const ::algo::seemmo::TrailRequest*>(request),
             ::google::protobuf::down_cast< ::algo::seemmo::TrailReply*>(response),
             done);
      break;
    case 1:
      TrailEnd(controller,
             ::google::protobuf::down_cast<const ::algo::seemmo::TrailEndRequest*>(request),
             ::google::protobuf::down_cast< ::algo::seemmo::TrailEndReply*>(response),
             done);
      break;
    case 2:
      Recognize(controller,
             ::google::protobuf::down_cast<const ::algo::seemmo::RecognizeRequest*>(request),
             ::google::protobuf::down_cast< ::algo::seemmo::RecognizeReply*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& VideoProcService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::algo::seemmo::TrailRequest::default_instance();
    case 1:
      return ::algo::seemmo::TrailEndRequest::default_instance();
    case 2:
      return ::algo::seemmo::RecognizeRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& VideoProcService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::algo::seemmo::TrailReply::default_instance();
    case 1:
      return ::algo::seemmo::TrailEndReply::default_instance();
    case 2:
      return ::algo::seemmo::RecognizeReply::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

VideoProcService_Stub::VideoProcService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
VideoProcService_Stub::VideoProcService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
VideoProcService_Stub::~VideoProcService_Stub() {
  if (owns_channel_) delete channel_;
}

void VideoProcService_Stub::Trail(::google::protobuf::RpcController* controller,
                              const ::algo::seemmo::TrailRequest* request,
                              ::algo::seemmo::TrailReply* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void VideoProcService_Stub::TrailEnd(::google::protobuf::RpcController* controller,
                              const ::algo::seemmo::TrailEndRequest* request,
                              ::algo::seemmo::TrailEndReply* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void VideoProcService_Stub::Recognize(::google::protobuf::RpcController* controller,
                              const ::algo::seemmo::RecognizeRequest* request,
                              ::algo::seemmo::RecognizeReply* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
// ===================================================================

ImgProcService::~ImgProcService() {}

const ::google::protobuf::ServiceDescriptor* ImgProcService::descriptor() {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2eproto::file_level_service_descriptors[1];
}

const ::google::protobuf::ServiceDescriptor* ImgProcService::GetDescriptor() {
  return descriptor();
}

void ImgProcService::Recognize(::google::protobuf::RpcController* controller,
                         const ::algo::seemmo::ImgRecognizeRequest*,
                         ::algo::seemmo::ImgRecognizeReply*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Recognize() not implemented.");
  done->Run();
}

void ImgProcService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_service_2eproto::file_level_service_descriptors[1]);
  switch(method->index()) {
    case 0:
      Recognize(controller,
             ::google::protobuf::down_cast<const ::algo::seemmo::ImgRecognizeRequest*>(request),
             ::google::protobuf::down_cast< ::algo::seemmo::ImgRecognizeReply*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& ImgProcService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::algo::seemmo::ImgRecognizeRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& ImgProcService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::algo::seemmo::ImgRecognizeReply::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

ImgProcService_Stub::ImgProcService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
ImgProcService_Stub::ImgProcService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
ImgProcService_Stub::~ImgProcService_Stub() {
  if (owns_channel_) delete channel_;
}

void ImgProcService_Stub::Recognize(::google::protobuf::RpcController* controller,
                              const ::algo::seemmo::ImgRecognizeRequest* request,
                              ::algo::seemmo::ImgRecognizeReply* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace seemmo
}  // namespace algo

// @@protoc_insertion_point(global_scope)
