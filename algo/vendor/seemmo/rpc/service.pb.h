// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

#ifndef PROTOBUF_INCLUDED_service_2eproto
#define PROTOBUF_INCLUDED_service_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto 

namespace protobuf_service_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_service_2eproto
namespace algo {
namespace seemmo {
class RecognizeReply;
class RecognizeReplyDefaultTypeInternal;
extern RecognizeReplyDefaultTypeInternal _RecognizeReply_default_instance_;
class RecognizeRequest;
class RecognizeRequestDefaultTypeInternal;
extern RecognizeRequestDefaultTypeInternal _RecognizeRequest_default_instance_;
class TrailReply;
class TrailReplyDefaultTypeInternal;
extern TrailReplyDefaultTypeInternal _TrailReply_default_instance_;
class TrailRequest;
class TrailRequestDefaultTypeInternal;
extern TrailRequestDefaultTypeInternal _TrailRequest_default_instance_;
class Void;
class VoidDefaultTypeInternal;
extern VoidDefaultTypeInternal _Void_default_instance_;
}  // namespace seemmo
}  // namespace algo
namespace google {
namespace protobuf {
template<> ::algo::seemmo::RecognizeReply* Arena::CreateMaybeMessage<::algo::seemmo::RecognizeReply>(Arena*);
template<> ::algo::seemmo::RecognizeRequest* Arena::CreateMaybeMessage<::algo::seemmo::RecognizeRequest>(Arena*);
template<> ::algo::seemmo::TrailReply* Arena::CreateMaybeMessage<::algo::seemmo::TrailReply>(Arena*);
template<> ::algo::seemmo::TrailRequest* Arena::CreateMaybeMessage<::algo::seemmo::TrailRequest>(Arena*);
template<> ::algo::seemmo::Void* Arena::CreateMaybeMessage<::algo::seemmo::Void>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace algo {
namespace seemmo {

// ===================================================================

class Void : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:algo.seemmo.Void) */ {
 public:
  Void();
  virtual ~Void();

  Void(const Void& from);

  inline Void& operator=(const Void& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Void(Void&& from) noexcept
    : Void() {
    *this = ::std::move(from);
  }

  inline Void& operator=(Void&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Void& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Void* internal_default_instance() {
    return reinterpret_cast<const Void*>(
               &_Void_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Void* other);
  friend void swap(Void& a, Void& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Void* New() const final {
    return CreateMaybeMessage<Void>(NULL);
  }

  Void* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Void>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Void& from);
  void MergeFrom(const Void& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Void* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:algo.seemmo.Void)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TrailRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:algo.seemmo.TrailRequest) */ {
 public:
  TrailRequest();
  virtual ~TrailRequest();

  TrailRequest(const TrailRequest& from);

  inline TrailRequest& operator=(const TrailRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrailRequest(TrailRequest&& from) noexcept
    : TrailRequest() {
    *this = ::std::move(from);
  }

  inline TrailRequest& operator=(TrailRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TrailRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrailRequest* internal_default_instance() {
    return reinterpret_cast<const TrailRequest*>(
               &_TrailRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(TrailRequest* other);
  friend void swap(TrailRequest& a, TrailRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrailRequest* New() const final {
    return CreateMaybeMessage<TrailRequest>(NULL);
  }

  TrailRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TrailRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TrailRequest& from);
  void MergeFrom(const TrailRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrailRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes bgr24 = 3;
  void clear_bgr24();
  static const int kBgr24FieldNumber = 3;
  const ::std::string& bgr24() const;
  void set_bgr24(const ::std::string& value);
  #if LANG_CXX11
  void set_bgr24(::std::string&& value);
  #endif
  void set_bgr24(const char* value);
  void set_bgr24(const void* value, size_t size);
  ::std::string* mutable_bgr24();
  ::std::string* release_bgr24();
  void set_allocated_bgr24(::std::string* bgr24);

  // string param = 6;
  void clear_param();
  static const int kParamFieldNumber = 6;
  const ::std::string& param() const;
  void set_param(const ::std::string& value);
  #if LANG_CXX11
  void set_param(::std::string&& value);
  #endif
  void set_param(const char* value);
  void set_param(const char* value, size_t size);
  ::std::string* mutable_param();
  ::std::string* release_param();
  void set_allocated_param(::std::string* param);

  // uint64 timestamp = 2;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // uint32 videoChl = 1;
  void clear_videochl();
  static const int kVideoChlFieldNumber = 1;
  ::google::protobuf::uint32 videochl() const;
  void set_videochl(::google::protobuf::uint32 value);

  // uint32 height = 4;
  void clear_height();
  static const int kHeightFieldNumber = 4;
  ::google::protobuf::uint32 height() const;
  void set_height(::google::protobuf::uint32 value);

  // uint32 width = 5;
  void clear_width();
  static const int kWidthFieldNumber = 5;
  ::google::protobuf::uint32 width() const;
  void set_width(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:algo.seemmo.TrailRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bgr24_;
  ::google::protobuf::internal::ArenaStringPtr param_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::uint32 videochl_;
  ::google::protobuf::uint32 height_;
  ::google::protobuf::uint32 width_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TrailReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:algo.seemmo.TrailReply) */ {
 public:
  TrailReply();
  virtual ~TrailReply();

  TrailReply(const TrailReply& from);

  inline TrailReply& operator=(const TrailReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrailReply(TrailReply&& from) noexcept
    : TrailReply() {
    *this = ::std::move(from);
  }

  inline TrailReply& operator=(TrailReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TrailReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrailReply* internal_default_instance() {
    return reinterpret_cast<const TrailReply*>(
               &_TrailReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(TrailReply* other);
  friend void swap(TrailReply& a, TrailReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrailReply* New() const final {
    return CreateMaybeMessage<TrailReply>(NULL);
  }

  TrailReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TrailReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TrailReply& from);
  void MergeFrom(const TrailReply& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrailReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:algo.seemmo.TrailReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RecognizeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:algo.seemmo.RecognizeRequest) */ {
 public:
  RecognizeRequest();
  virtual ~RecognizeRequest();

  RecognizeRequest(const RecognizeRequest& from);

  inline RecognizeRequest& operator=(const RecognizeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RecognizeRequest(RecognizeRequest&& from) noexcept
    : RecognizeRequest() {
    *this = ::std::move(from);
  }

  inline RecognizeRequest& operator=(RecognizeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RecognizeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RecognizeRequest* internal_default_instance() {
    return reinterpret_cast<const RecognizeRequest*>(
               &_RecognizeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(RecognizeRequest* other);
  friend void swap(RecognizeRequest& a, RecognizeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RecognizeRequest* New() const final {
    return CreateMaybeMessage<RecognizeRequest>(NULL);
  }

  RecognizeRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RecognizeRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RecognizeRequest& from);
  void MergeFrom(const RecognizeRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RecognizeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes bgr24 = 1;
  void clear_bgr24();
  static const int kBgr24FieldNumber = 1;
  const ::std::string& bgr24() const;
  void set_bgr24(const ::std::string& value);
  #if LANG_CXX11
  void set_bgr24(::std::string&& value);
  #endif
  void set_bgr24(const char* value);
  void set_bgr24(const void* value, size_t size);
  ::std::string* mutable_bgr24();
  ::std::string* release_bgr24();
  void set_allocated_bgr24(::std::string* bgr24);

  // string param = 4;
  void clear_param();
  static const int kParamFieldNumber = 4;
  const ::std::string& param() const;
  void set_param(const ::std::string& value);
  #if LANG_CXX11
  void set_param(::std::string&& value);
  #endif
  void set_param(const char* value);
  void set_param(const char* value, size_t size);
  ::std::string* mutable_param();
  ::std::string* release_param();
  void set_allocated_param(::std::string* param);

  // uint32 height = 2;
  void clear_height();
  static const int kHeightFieldNumber = 2;
  ::google::protobuf::uint32 height() const;
  void set_height(::google::protobuf::uint32 value);

  // uint32 width = 3;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  ::google::protobuf::uint32 width() const;
  void set_width(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:algo.seemmo.RecognizeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bgr24_;
  ::google::protobuf::internal::ArenaStringPtr param_;
  ::google::protobuf::uint32 height_;
  ::google::protobuf::uint32 width_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RecognizeReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:algo.seemmo.RecognizeReply) */ {
 public:
  RecognizeReply();
  virtual ~RecognizeReply();

  RecognizeReply(const RecognizeReply& from);

  inline RecognizeReply& operator=(const RecognizeReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RecognizeReply(RecognizeReply&& from) noexcept
    : RecognizeReply() {
    *this = ::std::move(from);
  }

  inline RecognizeReply& operator=(RecognizeReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RecognizeReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RecognizeReply* internal_default_instance() {
    return reinterpret_cast<const RecognizeReply*>(
               &_RecognizeReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(RecognizeReply* other);
  friend void swap(RecognizeReply& a, RecognizeReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RecognizeReply* New() const final {
    return CreateMaybeMessage<RecognizeReply>(NULL);
  }

  RecognizeReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RecognizeReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RecognizeReply& from);
  void MergeFrom(const RecognizeReply& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RecognizeReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:algo.seemmo.RecognizeReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Void

// -------------------------------------------------------------------

// TrailRequest

// uint32 videoChl = 1;
inline void TrailRequest::clear_videochl() {
  videochl_ = 0u;
}
inline ::google::protobuf::uint32 TrailRequest::videochl() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.TrailRequest.videoChl)
  return videochl_;
}
inline void TrailRequest::set_videochl(::google::protobuf::uint32 value) {
  
  videochl_ = value;
  // @@protoc_insertion_point(field_set:algo.seemmo.TrailRequest.videoChl)
}

// uint64 timestamp = 2;
inline void TrailRequest::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TrailRequest::timestamp() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.TrailRequest.timestamp)
  return timestamp_;
}
inline void TrailRequest::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:algo.seemmo.TrailRequest.timestamp)
}

// bytes bgr24 = 3;
inline void TrailRequest::clear_bgr24() {
  bgr24_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrailRequest::bgr24() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.TrailRequest.bgr24)
  return bgr24_.GetNoArena();
}
inline void TrailRequest::set_bgr24(const ::std::string& value) {
  
  bgr24_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:algo.seemmo.TrailRequest.bgr24)
}
#if LANG_CXX11
inline void TrailRequest::set_bgr24(::std::string&& value) {
  
  bgr24_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:algo.seemmo.TrailRequest.bgr24)
}
#endif
inline void TrailRequest::set_bgr24(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bgr24_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:algo.seemmo.TrailRequest.bgr24)
}
inline void TrailRequest::set_bgr24(const void* value, size_t size) {
  
  bgr24_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:algo.seemmo.TrailRequest.bgr24)
}
inline ::std::string* TrailRequest::mutable_bgr24() {
  
  // @@protoc_insertion_point(field_mutable:algo.seemmo.TrailRequest.bgr24)
  return bgr24_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrailRequest::release_bgr24() {
  // @@protoc_insertion_point(field_release:algo.seemmo.TrailRequest.bgr24)
  
  return bgr24_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrailRequest::set_allocated_bgr24(::std::string* bgr24) {
  if (bgr24 != NULL) {
    
  } else {
    
  }
  bgr24_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bgr24);
  // @@protoc_insertion_point(field_set_allocated:algo.seemmo.TrailRequest.bgr24)
}

// uint32 height = 4;
inline void TrailRequest::clear_height() {
  height_ = 0u;
}
inline ::google::protobuf::uint32 TrailRequest::height() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.TrailRequest.height)
  return height_;
}
inline void TrailRequest::set_height(::google::protobuf::uint32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:algo.seemmo.TrailRequest.height)
}

// uint32 width = 5;
inline void TrailRequest::clear_width() {
  width_ = 0u;
}
inline ::google::protobuf::uint32 TrailRequest::width() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.TrailRequest.width)
  return width_;
}
inline void TrailRequest::set_width(::google::protobuf::uint32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:algo.seemmo.TrailRequest.width)
}

// string param = 6;
inline void TrailRequest::clear_param() {
  param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrailRequest::param() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.TrailRequest.param)
  return param_.GetNoArena();
}
inline void TrailRequest::set_param(const ::std::string& value) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:algo.seemmo.TrailRequest.param)
}
#if LANG_CXX11
inline void TrailRequest::set_param(::std::string&& value) {
  
  param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:algo.seemmo.TrailRequest.param)
}
#endif
inline void TrailRequest::set_param(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:algo.seemmo.TrailRequest.param)
}
inline void TrailRequest::set_param(const char* value, size_t size) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:algo.seemmo.TrailRequest.param)
}
inline ::std::string* TrailRequest::mutable_param() {
  
  // @@protoc_insertion_point(field_mutable:algo.seemmo.TrailRequest.param)
  return param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrailRequest::release_param() {
  // @@protoc_insertion_point(field_release:algo.seemmo.TrailRequest.param)
  
  return param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrailRequest::set_allocated_param(::std::string* param) {
  if (param != NULL) {
    
  } else {
    
  }
  param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param);
  // @@protoc_insertion_point(field_set_allocated:algo.seemmo.TrailRequest.param)
}

// -------------------------------------------------------------------

// TrailReply

// string data = 1;
inline void TrailReply::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrailReply::data() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.TrailReply.data)
  return data_.GetNoArena();
}
inline void TrailReply::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:algo.seemmo.TrailReply.data)
}
#if LANG_CXX11
inline void TrailReply::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:algo.seemmo.TrailReply.data)
}
#endif
inline void TrailReply::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:algo.seemmo.TrailReply.data)
}
inline void TrailReply::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:algo.seemmo.TrailReply.data)
}
inline ::std::string* TrailReply::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:algo.seemmo.TrailReply.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrailReply::release_data() {
  // @@protoc_insertion_point(field_release:algo.seemmo.TrailReply.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrailReply::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:algo.seemmo.TrailReply.data)
}

// -------------------------------------------------------------------

// RecognizeRequest

// bytes bgr24 = 1;
inline void RecognizeRequest::clear_bgr24() {
  bgr24_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RecognizeRequest::bgr24() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.RecognizeRequest.bgr24)
  return bgr24_.GetNoArena();
}
inline void RecognizeRequest::set_bgr24(const ::std::string& value) {
  
  bgr24_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:algo.seemmo.RecognizeRequest.bgr24)
}
#if LANG_CXX11
inline void RecognizeRequest::set_bgr24(::std::string&& value) {
  
  bgr24_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:algo.seemmo.RecognizeRequest.bgr24)
}
#endif
inline void RecognizeRequest::set_bgr24(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bgr24_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:algo.seemmo.RecognizeRequest.bgr24)
}
inline void RecognizeRequest::set_bgr24(const void* value, size_t size) {
  
  bgr24_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:algo.seemmo.RecognizeRequest.bgr24)
}
inline ::std::string* RecognizeRequest::mutable_bgr24() {
  
  // @@protoc_insertion_point(field_mutable:algo.seemmo.RecognizeRequest.bgr24)
  return bgr24_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RecognizeRequest::release_bgr24() {
  // @@protoc_insertion_point(field_release:algo.seemmo.RecognizeRequest.bgr24)
  
  return bgr24_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RecognizeRequest::set_allocated_bgr24(::std::string* bgr24) {
  if (bgr24 != NULL) {
    
  } else {
    
  }
  bgr24_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bgr24);
  // @@protoc_insertion_point(field_set_allocated:algo.seemmo.RecognizeRequest.bgr24)
}

// uint32 height = 2;
inline void RecognizeRequest::clear_height() {
  height_ = 0u;
}
inline ::google::protobuf::uint32 RecognizeRequest::height() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.RecognizeRequest.height)
  return height_;
}
inline void RecognizeRequest::set_height(::google::protobuf::uint32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:algo.seemmo.RecognizeRequest.height)
}

// uint32 width = 3;
inline void RecognizeRequest::clear_width() {
  width_ = 0u;
}
inline ::google::protobuf::uint32 RecognizeRequest::width() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.RecognizeRequest.width)
  return width_;
}
inline void RecognizeRequest::set_width(::google::protobuf::uint32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:algo.seemmo.RecognizeRequest.width)
}

// string param = 4;
inline void RecognizeRequest::clear_param() {
  param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RecognizeRequest::param() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.RecognizeRequest.param)
  return param_.GetNoArena();
}
inline void RecognizeRequest::set_param(const ::std::string& value) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:algo.seemmo.RecognizeRequest.param)
}
#if LANG_CXX11
inline void RecognizeRequest::set_param(::std::string&& value) {
  
  param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:algo.seemmo.RecognizeRequest.param)
}
#endif
inline void RecognizeRequest::set_param(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:algo.seemmo.RecognizeRequest.param)
}
inline void RecognizeRequest::set_param(const char* value, size_t size) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:algo.seemmo.RecognizeRequest.param)
}
inline ::std::string* RecognizeRequest::mutable_param() {
  
  // @@protoc_insertion_point(field_mutable:algo.seemmo.RecognizeRequest.param)
  return param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RecognizeRequest::release_param() {
  // @@protoc_insertion_point(field_release:algo.seemmo.RecognizeRequest.param)
  
  return param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RecognizeRequest::set_allocated_param(::std::string* param) {
  if (param != NULL) {
    
  } else {
    
  }
  param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param);
  // @@protoc_insertion_point(field_set_allocated:algo.seemmo.RecognizeRequest.param)
}

// -------------------------------------------------------------------

// RecognizeReply

// string data = 1;
inline void RecognizeReply::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RecognizeReply::data() const {
  // @@protoc_insertion_point(field_get:algo.seemmo.RecognizeReply.data)
  return data_.GetNoArena();
}
inline void RecognizeReply::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:algo.seemmo.RecognizeReply.data)
}
#if LANG_CXX11
inline void RecognizeReply::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:algo.seemmo.RecognizeReply.data)
}
#endif
inline void RecognizeReply::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:algo.seemmo.RecognizeReply.data)
}
inline void RecognizeReply::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:algo.seemmo.RecognizeReply.data)
}
inline ::std::string* RecognizeReply::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:algo.seemmo.RecognizeReply.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RecognizeReply::release_data() {
  // @@protoc_insertion_point(field_release:algo.seemmo.RecognizeReply.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RecognizeReply::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:algo.seemmo.RecognizeReply.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace seemmo
}  // namespace algo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_service_2eproto
