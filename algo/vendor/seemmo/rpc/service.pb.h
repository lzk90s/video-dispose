// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

#ifndef PROTOBUF_service_2eproto__INCLUDED
#define PROTOBUF_service_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace video {
namespace algo {
namespace seemmo {
class ImgRecognizeReply;
class ImgRecognizeReplyDefaultTypeInternal;
extern ImgRecognizeReplyDefaultTypeInternal _ImgRecognizeReply_default_instance_;
class ImgRecognizeRequest;
class ImgRecognizeRequestDefaultTypeInternal;
extern ImgRecognizeRequestDefaultTypeInternal _ImgRecognizeRequest_default_instance_;
class RecognizeReply;
class RecognizeReplyDefaultTypeInternal;
extern RecognizeReplyDefaultTypeInternal _RecognizeReply_default_instance_;
class RecognizeRequest;
class RecognizeRequestDefaultTypeInternal;
extern RecognizeRequestDefaultTypeInternal _RecognizeRequest_default_instance_;
class TrailEndReply;
class TrailEndReplyDefaultTypeInternal;
extern TrailEndReplyDefaultTypeInternal _TrailEndReply_default_instance_;
class TrailEndRequest;
class TrailEndRequestDefaultTypeInternal;
extern TrailEndRequestDefaultTypeInternal _TrailEndRequest_default_instance_;
class TrailReply;
class TrailReplyDefaultTypeInternal;
extern TrailReplyDefaultTypeInternal _TrailReply_default_instance_;
class TrailRequest;
class TrailRequestDefaultTypeInternal;
extern TrailRequestDefaultTypeInternal _TrailRequest_default_instance_;
}  // namespace seemmo
}  // namespace algo
}  // namespace video

namespace video {
namespace algo {
namespace seemmo {

namespace protobuf_service_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_service_2eproto

// ===================================================================

class TrailRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:video.algo.seemmo.TrailRequest) */ {
 public:
  TrailRequest();
  virtual ~TrailRequest();

  TrailRequest(const TrailRequest& from);

  inline TrailRequest& operator=(const TrailRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrailRequest& default_instance();

  static inline const TrailRequest* internal_default_instance() {
    return reinterpret_cast<const TrailRequest*>(
               &_TrailRequest_default_instance_);
  }

  void Swap(TrailRequest* other);

  // implements Message ----------------------------------------------

  inline TrailRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  TrailRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TrailRequest& from);
  void MergeFrom(const TrailRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TrailRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes bgr24 = 3;
  void clear_bgr24();
  static const int kBgr24FieldNumber = 3;
  const ::std::string& bgr24() const;
  void set_bgr24(const ::std::string& value);
  #if LANG_CXX11
  void set_bgr24(::std::string&& value);
  #endif
  void set_bgr24(const char* value);
  void set_bgr24(const void* value, size_t size);
  ::std::string* mutable_bgr24();
  ::std::string* release_bgr24();
  void set_allocated_bgr24(::std::string* bgr24);

  // string param = 6;
  void clear_param();
  static const int kParamFieldNumber = 6;
  const ::std::string& param() const;
  void set_param(const ::std::string& value);
  #if LANG_CXX11
  void set_param(::std::string&& value);
  #endif
  void set_param(const char* value);
  void set_param(const char* value, size_t size);
  ::std::string* mutable_param();
  ::std::string* release_param();
  void set_allocated_param(::std::string* param);

  // uint64 timestamp = 2;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // uint32 videoChl = 1;
  void clear_videochl();
  static const int kVideoChlFieldNumber = 1;
  ::google::protobuf::uint32 videochl() const;
  void set_videochl(::google::protobuf::uint32 value);

  // uint32 height = 4;
  void clear_height();
  static const int kHeightFieldNumber = 4;
  ::google::protobuf::uint32 height() const;
  void set_height(::google::protobuf::uint32 value);

  // uint32 width = 5;
  void clear_width();
  static const int kWidthFieldNumber = 5;
  ::google::protobuf::uint32 width() const;
  void set_width(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:video.algo.seemmo.TrailRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bgr24_;
  ::google::protobuf::internal::ArenaStringPtr param_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::uint32 videochl_;
  ::google::protobuf::uint32 height_;
  ::google::protobuf::uint32 width_;
  mutable int _cached_size_;
  friend struct  protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TrailReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:video.algo.seemmo.TrailReply) */ {
 public:
  TrailReply();
  virtual ~TrailReply();

  TrailReply(const TrailReply& from);

  inline TrailReply& operator=(const TrailReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrailReply& default_instance();

  static inline const TrailReply* internal_default_instance() {
    return reinterpret_cast<const TrailReply*>(
               &_TrailReply_default_instance_);
  }

  void Swap(TrailReply* other);

  // implements Message ----------------------------------------------

  inline TrailReply* New() const PROTOBUF_FINAL { return New(NULL); }

  TrailReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TrailReply& from);
  void MergeFrom(const TrailReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TrailReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:video.algo.seemmo.TrailReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable int _cached_size_;
  friend struct  protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TrailEndRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:video.algo.seemmo.TrailEndRequest) */ {
 public:
  TrailEndRequest();
  virtual ~TrailEndRequest();

  TrailEndRequest(const TrailEndRequest& from);

  inline TrailEndRequest& operator=(const TrailEndRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrailEndRequest& default_instance();

  static inline const TrailEndRequest* internal_default_instance() {
    return reinterpret_cast<const TrailEndRequest*>(
               &_TrailEndRequest_default_instance_);
  }

  void Swap(TrailEndRequest* other);

  // implements Message ----------------------------------------------

  inline TrailEndRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  TrailEndRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TrailEndRequest& from);
  void MergeFrom(const TrailEndRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TrailEndRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string param = 2;
  void clear_param();
  static const int kParamFieldNumber = 2;
  const ::std::string& param() const;
  void set_param(const ::std::string& value);
  #if LANG_CXX11
  void set_param(::std::string&& value);
  #endif
  void set_param(const char* value);
  void set_param(const char* value, size_t size);
  ::std::string* mutable_param();
  ::std::string* release_param();
  void set_allocated_param(::std::string* param);

  // uint32 videoChl = 1;
  void clear_videochl();
  static const int kVideoChlFieldNumber = 1;
  ::google::protobuf::uint32 videochl() const;
  void set_videochl(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:video.algo.seemmo.TrailEndRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr param_;
  ::google::protobuf::uint32 videochl_;
  mutable int _cached_size_;
  friend struct  protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TrailEndReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:video.algo.seemmo.TrailEndReply) */ {
 public:
  TrailEndReply();
  virtual ~TrailEndReply();

  TrailEndReply(const TrailEndReply& from);

  inline TrailEndReply& operator=(const TrailEndReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrailEndReply& default_instance();

  static inline const TrailEndReply* internal_default_instance() {
    return reinterpret_cast<const TrailEndReply*>(
               &_TrailEndReply_default_instance_);
  }

  void Swap(TrailEndReply* other);

  // implements Message ----------------------------------------------

  inline TrailEndReply* New() const PROTOBUF_FINAL { return New(NULL); }

  TrailEndReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TrailEndReply& from);
  void MergeFrom(const TrailEndReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TrailEndReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:video.algo.seemmo.TrailEndReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable int _cached_size_;
  friend struct  protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RecognizeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:video.algo.seemmo.RecognizeRequest) */ {
 public:
  RecognizeRequest();
  virtual ~RecognizeRequest();

  RecognizeRequest(const RecognizeRequest& from);

  inline RecognizeRequest& operator=(const RecognizeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecognizeRequest& default_instance();

  static inline const RecognizeRequest* internal_default_instance() {
    return reinterpret_cast<const RecognizeRequest*>(
               &_RecognizeRequest_default_instance_);
  }

  void Swap(RecognizeRequest* other);

  // implements Message ----------------------------------------------

  inline RecognizeRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RecognizeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RecognizeRequest& from);
  void MergeFrom(const RecognizeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RecognizeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes bgr24 = 2;
  void clear_bgr24();
  static const int kBgr24FieldNumber = 2;
  const ::std::string& bgr24() const;
  void set_bgr24(const ::std::string& value);
  #if LANG_CXX11
  void set_bgr24(::std::string&& value);
  #endif
  void set_bgr24(const char* value);
  void set_bgr24(const void* value, size_t size);
  ::std::string* mutable_bgr24();
  ::std::string* release_bgr24();
  void set_allocated_bgr24(::std::string* bgr24);

  // string param = 5;
  void clear_param();
  static const int kParamFieldNumber = 5;
  const ::std::string& param() const;
  void set_param(const ::std::string& value);
  #if LANG_CXX11
  void set_param(::std::string&& value);
  #endif
  void set_param(const char* value);
  void set_param(const char* value, size_t size);
  ::std::string* mutable_param();
  ::std::string* release_param();
  void set_allocated_param(::std::string* param);

  // uint32 videoChl = 1;
  void clear_videochl();
  static const int kVideoChlFieldNumber = 1;
  ::google::protobuf::uint32 videochl() const;
  void set_videochl(::google::protobuf::uint32 value);

  // uint32 height = 3;
  void clear_height();
  static const int kHeightFieldNumber = 3;
  ::google::protobuf::uint32 height() const;
  void set_height(::google::protobuf::uint32 value);

  // uint32 width = 4;
  void clear_width();
  static const int kWidthFieldNumber = 4;
  ::google::protobuf::uint32 width() const;
  void set_width(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:video.algo.seemmo.RecognizeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bgr24_;
  ::google::protobuf::internal::ArenaStringPtr param_;
  ::google::protobuf::uint32 videochl_;
  ::google::protobuf::uint32 height_;
  ::google::protobuf::uint32 width_;
  mutable int _cached_size_;
  friend struct  protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RecognizeReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:video.algo.seemmo.RecognizeReply) */ {
 public:
  RecognizeReply();
  virtual ~RecognizeReply();

  RecognizeReply(const RecognizeReply& from);

  inline RecognizeReply& operator=(const RecognizeReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecognizeReply& default_instance();

  static inline const RecognizeReply* internal_default_instance() {
    return reinterpret_cast<const RecognizeReply*>(
               &_RecognizeReply_default_instance_);
  }

  void Swap(RecognizeReply* other);

  // implements Message ----------------------------------------------

  inline RecognizeReply* New() const PROTOBUF_FINAL { return New(NULL); }

  RecognizeReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RecognizeReply& from);
  void MergeFrom(const RecognizeReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RecognizeReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:video.algo.seemmo.RecognizeReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable int _cached_size_;
  friend struct  protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImgRecognizeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:video.algo.seemmo.ImgRecognizeRequest) */ {
 public:
  ImgRecognizeRequest();
  virtual ~ImgRecognizeRequest();

  ImgRecognizeRequest(const ImgRecognizeRequest& from);

  inline ImgRecognizeRequest& operator=(const ImgRecognizeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImgRecognizeRequest& default_instance();

  static inline const ImgRecognizeRequest* internal_default_instance() {
    return reinterpret_cast<const ImgRecognizeRequest*>(
               &_ImgRecognizeRequest_default_instance_);
  }

  void Swap(ImgRecognizeRequest* other);

  // implements Message ----------------------------------------------

  inline ImgRecognizeRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ImgRecognizeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ImgRecognizeRequest& from);
  void MergeFrom(const ImgRecognizeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ImgRecognizeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes jpeg = 2;
  void clear_jpeg();
  static const int kJpegFieldNumber = 2;
  const ::std::string& jpeg() const;
  void set_jpeg(const ::std::string& value);
  #if LANG_CXX11
  void set_jpeg(::std::string&& value);
  #endif
  void set_jpeg(const char* value);
  void set_jpeg(const void* value, size_t size);
  ::std::string* mutable_jpeg();
  ::std::string* release_jpeg();
  void set_allocated_jpeg(::std::string* jpeg);

  // uint32 imageId = 1;
  void clear_imageid();
  static const int kImageIdFieldNumber = 1;
  ::google::protobuf::uint32 imageid() const;
  void set_imageid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:video.algo.seemmo.ImgRecognizeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr jpeg_;
  ::google::protobuf::uint32 imageid_;
  mutable int _cached_size_;
  friend struct  protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImgRecognizeReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:video.algo.seemmo.ImgRecognizeReply) */ {
 public:
  ImgRecognizeReply();
  virtual ~ImgRecognizeReply();

  ImgRecognizeReply(const ImgRecognizeReply& from);

  inline ImgRecognizeReply& operator=(const ImgRecognizeReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImgRecognizeReply& default_instance();

  static inline const ImgRecognizeReply* internal_default_instance() {
    return reinterpret_cast<const ImgRecognizeReply*>(
               &_ImgRecognizeReply_default_instance_);
  }

  void Swap(ImgRecognizeReply* other);

  // implements Message ----------------------------------------------

  inline ImgRecognizeReply* New() const PROTOBUF_FINAL { return New(NULL); }

  ImgRecognizeReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ImgRecognizeReply& from);
  void MergeFrom(const ImgRecognizeReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ImgRecognizeReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:video.algo.seemmo.ImgRecognizeReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable int _cached_size_;
  friend struct  protobuf_service_2eproto::TableStruct;
};
// ===================================================================

class VideoProcService_Stub;

class VideoProcService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline VideoProcService() {};
 public:
  virtual ~VideoProcService();

  typedef VideoProcService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void Trail(::google::protobuf::RpcController* controller,
                       const ::video::algo::seemmo::TrailRequest* request,
                       ::video::algo::seemmo::TrailReply* response,
                       ::google::protobuf::Closure* done);
  virtual void TrailEnd(::google::protobuf::RpcController* controller,
                       const ::video::algo::seemmo::TrailEndRequest* request,
                       ::video::algo::seemmo::TrailEndReply* response,
                       ::google::protobuf::Closure* done);
  virtual void Recognize(::google::protobuf::RpcController* controller,
                       const ::video::algo::seemmo::RecognizeRequest* request,
                       ::video::algo::seemmo::RecognizeReply* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(VideoProcService);
};

class VideoProcService_Stub : public VideoProcService {
 public:
  VideoProcService_Stub(::google::protobuf::RpcChannel* channel);
  VideoProcService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~VideoProcService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements VideoProcService ------------------------------------------

  void Trail(::google::protobuf::RpcController* controller,
                       const ::video::algo::seemmo::TrailRequest* request,
                       ::video::algo::seemmo::TrailReply* response,
                       ::google::protobuf::Closure* done);
  void TrailEnd(::google::protobuf::RpcController* controller,
                       const ::video::algo::seemmo::TrailEndRequest* request,
                       ::video::algo::seemmo::TrailEndReply* response,
                       ::google::protobuf::Closure* done);
  void Recognize(::google::protobuf::RpcController* controller,
                       const ::video::algo::seemmo::RecognizeRequest* request,
                       ::video::algo::seemmo::RecognizeReply* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(VideoProcService_Stub);
};


// -------------------------------------------------------------------

class ImgProcService_Stub;

class ImgProcService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline ImgProcService() {};
 public:
  virtual ~ImgProcService();

  typedef ImgProcService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void Recognize(::google::protobuf::RpcController* controller,
                       const ::video::algo::seemmo::ImgRecognizeRequest* request,
                       ::video::algo::seemmo::ImgRecognizeReply* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ImgProcService);
};

class ImgProcService_Stub : public ImgProcService {
 public:
  ImgProcService_Stub(::google::protobuf::RpcChannel* channel);
  ImgProcService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~ImgProcService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements ImgProcService ------------------------------------------

  void Recognize(::google::protobuf::RpcController* controller,
                       const ::video::algo::seemmo::ImgRecognizeRequest* request,
                       ::video::algo::seemmo::ImgRecognizeReply* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ImgProcService_Stub);
};


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TrailRequest

// uint32 videoChl = 1;
inline void TrailRequest::clear_videochl() {
  videochl_ = 0u;
}
inline ::google::protobuf::uint32 TrailRequest::videochl() const {
  // @@protoc_insertion_point(field_get:video.algo.seemmo.TrailRequest.videoChl)
  return videochl_;
}
inline void TrailRequest::set_videochl(::google::protobuf::uint32 value) {
  
  videochl_ = value;
  // @@protoc_insertion_point(field_set:video.algo.seemmo.TrailRequest.videoChl)
}

// uint64 timestamp = 2;
inline void TrailRequest::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TrailRequest::timestamp() const {
  // @@protoc_insertion_point(field_get:video.algo.seemmo.TrailRequest.timestamp)
  return timestamp_;
}
inline void TrailRequest::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:video.algo.seemmo.TrailRequest.timestamp)
}

// bytes bgr24 = 3;
inline void TrailRequest::clear_bgr24() {
  bgr24_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrailRequest::bgr24() const {
  // @@protoc_insertion_point(field_get:video.algo.seemmo.TrailRequest.bgr24)
  return bgr24_.GetNoArena();
}
inline void TrailRequest::set_bgr24(const ::std::string& value) {
  
  bgr24_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:video.algo.seemmo.TrailRequest.bgr24)
}
#if LANG_CXX11
inline void TrailRequest::set_bgr24(::std::string&& value) {
  
  bgr24_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:video.algo.seemmo.TrailRequest.bgr24)
}
#endif
inline void TrailRequest::set_bgr24(const char* value) {
  
  bgr24_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:video.algo.seemmo.TrailRequest.bgr24)
}
inline void TrailRequest::set_bgr24(const void* value, size_t size) {
  
  bgr24_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:video.algo.seemmo.TrailRequest.bgr24)
}
inline ::std::string* TrailRequest::mutable_bgr24() {
  
  // @@protoc_insertion_point(field_mutable:video.algo.seemmo.TrailRequest.bgr24)
  return bgr24_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrailRequest::release_bgr24() {
  // @@protoc_insertion_point(field_release:video.algo.seemmo.TrailRequest.bgr24)
  
  return bgr24_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrailRequest::set_allocated_bgr24(::std::string* bgr24) {
  if (bgr24 != NULL) {
    
  } else {
    
  }
  bgr24_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bgr24);
  // @@protoc_insertion_point(field_set_allocated:video.algo.seemmo.TrailRequest.bgr24)
}

// uint32 height = 4;
inline void TrailRequest::clear_height() {
  height_ = 0u;
}
inline ::google::protobuf::uint32 TrailRequest::height() const {
  // @@protoc_insertion_point(field_get:video.algo.seemmo.TrailRequest.height)
  return height_;
}
inline void TrailRequest::set_height(::google::protobuf::uint32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:video.algo.seemmo.TrailRequest.height)
}

// uint32 width = 5;
inline void TrailRequest::clear_width() {
  width_ = 0u;
}
inline ::google::protobuf::uint32 TrailRequest::width() const {
  // @@protoc_insertion_point(field_get:video.algo.seemmo.TrailRequest.width)
  return width_;
}
inline void TrailRequest::set_width(::google::protobuf::uint32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:video.algo.seemmo.TrailRequest.width)
}

// string param = 6;
inline void TrailRequest::clear_param() {
  param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrailRequest::param() const {
  // @@protoc_insertion_point(field_get:video.algo.seemmo.TrailRequest.param)
  return param_.GetNoArena();
}
inline void TrailRequest::set_param(const ::std::string& value) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:video.algo.seemmo.TrailRequest.param)
}
#if LANG_CXX11
inline void TrailRequest::set_param(::std::string&& value) {
  
  param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:video.algo.seemmo.TrailRequest.param)
}
#endif
inline void TrailRequest::set_param(const char* value) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:video.algo.seemmo.TrailRequest.param)
}
inline void TrailRequest::set_param(const char* value, size_t size) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:video.algo.seemmo.TrailRequest.param)
}
inline ::std::string* TrailRequest::mutable_param() {
  
  // @@protoc_insertion_point(field_mutable:video.algo.seemmo.TrailRequest.param)
  return param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrailRequest::release_param() {
  // @@protoc_insertion_point(field_release:video.algo.seemmo.TrailRequest.param)
  
  return param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrailRequest::set_allocated_param(::std::string* param) {
  if (param != NULL) {
    
  } else {
    
  }
  param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param);
  // @@protoc_insertion_point(field_set_allocated:video.algo.seemmo.TrailRequest.param)
}

// -------------------------------------------------------------------

// TrailReply

// string data = 1;
inline void TrailReply::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrailReply::data() const {
  // @@protoc_insertion_point(field_get:video.algo.seemmo.TrailReply.data)
  return data_.GetNoArena();
}
inline void TrailReply::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:video.algo.seemmo.TrailReply.data)
}
#if LANG_CXX11
inline void TrailReply::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:video.algo.seemmo.TrailReply.data)
}
#endif
inline void TrailReply::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:video.algo.seemmo.TrailReply.data)
}
inline void TrailReply::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:video.algo.seemmo.TrailReply.data)
}
inline ::std::string* TrailReply::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:video.algo.seemmo.TrailReply.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrailReply::release_data() {
  // @@protoc_insertion_point(field_release:video.algo.seemmo.TrailReply.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrailReply::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:video.algo.seemmo.TrailReply.data)
}

// -------------------------------------------------------------------

// TrailEndRequest

// uint32 videoChl = 1;
inline void TrailEndRequest::clear_videochl() {
  videochl_ = 0u;
}
inline ::google::protobuf::uint32 TrailEndRequest::videochl() const {
  // @@protoc_insertion_point(field_get:video.algo.seemmo.TrailEndRequest.videoChl)
  return videochl_;
}
inline void TrailEndRequest::set_videochl(::google::protobuf::uint32 value) {
  
  videochl_ = value;
  // @@protoc_insertion_point(field_set:video.algo.seemmo.TrailEndRequest.videoChl)
}

// string param = 2;
inline void TrailEndRequest::clear_param() {
  param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrailEndRequest::param() const {
  // @@protoc_insertion_point(field_get:video.algo.seemmo.TrailEndRequest.param)
  return param_.GetNoArena();
}
inline void TrailEndRequest::set_param(const ::std::string& value) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:video.algo.seemmo.TrailEndRequest.param)
}
#if LANG_CXX11
inline void TrailEndRequest::set_param(::std::string&& value) {
  
  param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:video.algo.seemmo.TrailEndRequest.param)
}
#endif
inline void TrailEndRequest::set_param(const char* value) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:video.algo.seemmo.TrailEndRequest.param)
}
inline void TrailEndRequest::set_param(const char* value, size_t size) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:video.algo.seemmo.TrailEndRequest.param)
}
inline ::std::string* TrailEndRequest::mutable_param() {
  
  // @@protoc_insertion_point(field_mutable:video.algo.seemmo.TrailEndRequest.param)
  return param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrailEndRequest::release_param() {
  // @@protoc_insertion_point(field_release:video.algo.seemmo.TrailEndRequest.param)
  
  return param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrailEndRequest::set_allocated_param(::std::string* param) {
  if (param != NULL) {
    
  } else {
    
  }
  param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param);
  // @@protoc_insertion_point(field_set_allocated:video.algo.seemmo.TrailEndRequest.param)
}

// -------------------------------------------------------------------

// TrailEndReply

// string data = 1;
inline void TrailEndReply::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrailEndReply::data() const {
  // @@protoc_insertion_point(field_get:video.algo.seemmo.TrailEndReply.data)
  return data_.GetNoArena();
}
inline void TrailEndReply::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:video.algo.seemmo.TrailEndReply.data)
}
#if LANG_CXX11
inline void TrailEndReply::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:video.algo.seemmo.TrailEndReply.data)
}
#endif
inline void TrailEndReply::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:video.algo.seemmo.TrailEndReply.data)
}
inline void TrailEndReply::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:video.algo.seemmo.TrailEndReply.data)
}
inline ::std::string* TrailEndReply::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:video.algo.seemmo.TrailEndReply.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrailEndReply::release_data() {
  // @@protoc_insertion_point(field_release:video.algo.seemmo.TrailEndReply.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrailEndReply::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:video.algo.seemmo.TrailEndReply.data)
}

// -------------------------------------------------------------------

// RecognizeRequest

// uint32 videoChl = 1;
inline void RecognizeRequest::clear_videochl() {
  videochl_ = 0u;
}
inline ::google::protobuf::uint32 RecognizeRequest::videochl() const {
  // @@protoc_insertion_point(field_get:video.algo.seemmo.RecognizeRequest.videoChl)
  return videochl_;
}
inline void RecognizeRequest::set_videochl(::google::protobuf::uint32 value) {
  
  videochl_ = value;
  // @@protoc_insertion_point(field_set:video.algo.seemmo.RecognizeRequest.videoChl)
}

// bytes bgr24 = 2;
inline void RecognizeRequest::clear_bgr24() {
  bgr24_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RecognizeRequest::bgr24() const {
  // @@protoc_insertion_point(field_get:video.algo.seemmo.RecognizeRequest.bgr24)
  return bgr24_.GetNoArena();
}
inline void RecognizeRequest::set_bgr24(const ::std::string& value) {
  
  bgr24_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:video.algo.seemmo.RecognizeRequest.bgr24)
}
#if LANG_CXX11
inline void RecognizeRequest::set_bgr24(::std::string&& value) {
  
  bgr24_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:video.algo.seemmo.RecognizeRequest.bgr24)
}
#endif
inline void RecognizeRequest::set_bgr24(const char* value) {
  
  bgr24_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:video.algo.seemmo.RecognizeRequest.bgr24)
}
inline void RecognizeRequest::set_bgr24(const void* value, size_t size) {
  
  bgr24_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:video.algo.seemmo.RecognizeRequest.bgr24)
}
inline ::std::string* RecognizeRequest::mutable_bgr24() {
  
  // @@protoc_insertion_point(field_mutable:video.algo.seemmo.RecognizeRequest.bgr24)
  return bgr24_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RecognizeRequest::release_bgr24() {
  // @@protoc_insertion_point(field_release:video.algo.seemmo.RecognizeRequest.bgr24)
  
  return bgr24_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RecognizeRequest::set_allocated_bgr24(::std::string* bgr24) {
  if (bgr24 != NULL) {
    
  } else {
    
  }
  bgr24_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bgr24);
  // @@protoc_insertion_point(field_set_allocated:video.algo.seemmo.RecognizeRequest.bgr24)
}

// uint32 height = 3;
inline void RecognizeRequest::clear_height() {
  height_ = 0u;
}
inline ::google::protobuf::uint32 RecognizeRequest::height() const {
  // @@protoc_insertion_point(field_get:video.algo.seemmo.RecognizeRequest.height)
  return height_;
}
inline void RecognizeRequest::set_height(::google::protobuf::uint32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:video.algo.seemmo.RecognizeRequest.height)
}

// uint32 width = 4;
inline void RecognizeRequest::clear_width() {
  width_ = 0u;
}
inline ::google::protobuf::uint32 RecognizeRequest::width() const {
  // @@protoc_insertion_point(field_get:video.algo.seemmo.RecognizeRequest.width)
  return width_;
}
inline void RecognizeRequest::set_width(::google::protobuf::uint32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:video.algo.seemmo.RecognizeRequest.width)
}

// string param = 5;
inline void RecognizeRequest::clear_param() {
  param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RecognizeRequest::param() const {
  // @@protoc_insertion_point(field_get:video.algo.seemmo.RecognizeRequest.param)
  return param_.GetNoArena();
}
inline void RecognizeRequest::set_param(const ::std::string& value) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:video.algo.seemmo.RecognizeRequest.param)
}
#if LANG_CXX11
inline void RecognizeRequest::set_param(::std::string&& value) {
  
  param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:video.algo.seemmo.RecognizeRequest.param)
}
#endif
inline void RecognizeRequest::set_param(const char* value) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:video.algo.seemmo.RecognizeRequest.param)
}
inline void RecognizeRequest::set_param(const char* value, size_t size) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:video.algo.seemmo.RecognizeRequest.param)
}
inline ::std::string* RecognizeRequest::mutable_param() {
  
  // @@protoc_insertion_point(field_mutable:video.algo.seemmo.RecognizeRequest.param)
  return param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RecognizeRequest::release_param() {
  // @@protoc_insertion_point(field_release:video.algo.seemmo.RecognizeRequest.param)
  
  return param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RecognizeRequest::set_allocated_param(::std::string* param) {
  if (param != NULL) {
    
  } else {
    
  }
  param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param);
  // @@protoc_insertion_point(field_set_allocated:video.algo.seemmo.RecognizeRequest.param)
}

// -------------------------------------------------------------------

// RecognizeReply

// string data = 1;
inline void RecognizeReply::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RecognizeReply::data() const {
  // @@protoc_insertion_point(field_get:video.algo.seemmo.RecognizeReply.data)
  return data_.GetNoArena();
}
inline void RecognizeReply::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:video.algo.seemmo.RecognizeReply.data)
}
#if LANG_CXX11
inline void RecognizeReply::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:video.algo.seemmo.RecognizeReply.data)
}
#endif
inline void RecognizeReply::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:video.algo.seemmo.RecognizeReply.data)
}
inline void RecognizeReply::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:video.algo.seemmo.RecognizeReply.data)
}
inline ::std::string* RecognizeReply::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:video.algo.seemmo.RecognizeReply.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RecognizeReply::release_data() {
  // @@protoc_insertion_point(field_release:video.algo.seemmo.RecognizeReply.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RecognizeReply::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:video.algo.seemmo.RecognizeReply.data)
}

// -------------------------------------------------------------------

// ImgRecognizeRequest

// uint32 imageId = 1;
inline void ImgRecognizeRequest::clear_imageid() {
  imageid_ = 0u;
}
inline ::google::protobuf::uint32 ImgRecognizeRequest::imageid() const {
  // @@protoc_insertion_point(field_get:video.algo.seemmo.ImgRecognizeRequest.imageId)
  return imageid_;
}
inline void ImgRecognizeRequest::set_imageid(::google::protobuf::uint32 value) {
  
  imageid_ = value;
  // @@protoc_insertion_point(field_set:video.algo.seemmo.ImgRecognizeRequest.imageId)
}

// bytes jpeg = 2;
inline void ImgRecognizeRequest::clear_jpeg() {
  jpeg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImgRecognizeRequest::jpeg() const {
  // @@protoc_insertion_point(field_get:video.algo.seemmo.ImgRecognizeRequest.jpeg)
  return jpeg_.GetNoArena();
}
inline void ImgRecognizeRequest::set_jpeg(const ::std::string& value) {
  
  jpeg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:video.algo.seemmo.ImgRecognizeRequest.jpeg)
}
#if LANG_CXX11
inline void ImgRecognizeRequest::set_jpeg(::std::string&& value) {
  
  jpeg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:video.algo.seemmo.ImgRecognizeRequest.jpeg)
}
#endif
inline void ImgRecognizeRequest::set_jpeg(const char* value) {
  
  jpeg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:video.algo.seemmo.ImgRecognizeRequest.jpeg)
}
inline void ImgRecognizeRequest::set_jpeg(const void* value, size_t size) {
  
  jpeg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:video.algo.seemmo.ImgRecognizeRequest.jpeg)
}
inline ::std::string* ImgRecognizeRequest::mutable_jpeg() {
  
  // @@protoc_insertion_point(field_mutable:video.algo.seemmo.ImgRecognizeRequest.jpeg)
  return jpeg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImgRecognizeRequest::release_jpeg() {
  // @@protoc_insertion_point(field_release:video.algo.seemmo.ImgRecognizeRequest.jpeg)
  
  return jpeg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImgRecognizeRequest::set_allocated_jpeg(::std::string* jpeg) {
  if (jpeg != NULL) {
    
  } else {
    
  }
  jpeg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jpeg);
  // @@protoc_insertion_point(field_set_allocated:video.algo.seemmo.ImgRecognizeRequest.jpeg)
}

// -------------------------------------------------------------------

// ImgRecognizeReply

// string data = 1;
inline void ImgRecognizeReply::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImgRecognizeReply::data() const {
  // @@protoc_insertion_point(field_get:video.algo.seemmo.ImgRecognizeReply.data)
  return data_.GetNoArena();
}
inline void ImgRecognizeReply::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:video.algo.seemmo.ImgRecognizeReply.data)
}
#if LANG_CXX11
inline void ImgRecognizeReply::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:video.algo.seemmo.ImgRecognizeReply.data)
}
#endif
inline void ImgRecognizeReply::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:video.algo.seemmo.ImgRecognizeReply.data)
}
inline void ImgRecognizeReply::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:video.algo.seemmo.ImgRecognizeReply.data)
}
inline ::std::string* ImgRecognizeReply::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:video.algo.seemmo.ImgRecognizeReply.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImgRecognizeReply::release_data() {
  // @@protoc_insertion_point(field_release:video.algo.seemmo.ImgRecognizeReply.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImgRecognizeReply::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:video.algo.seemmo.ImgRecognizeReply.data)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace seemmo
}  // namespace algo
}  // namespace video

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_service_2eproto__INCLUDED
