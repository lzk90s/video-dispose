// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

#ifndef PROTOBUF_service_2eproto__INCLUDED
#define PROTOBUF_service_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace algo {
namespace gosun_ext {
class ImgRecognizeReply;
class ImgRecognizeReplyDefaultTypeInternal;
extern ImgRecognizeReplyDefaultTypeInternal _ImgRecognizeReply_default_instance_;
class ImgRecognizeRequest;
class ImgRecognizeRequestDefaultTypeInternal;
extern ImgRecognizeRequestDefaultTypeInternal _ImgRecognizeRequest_default_instance_;
}  // namespace gosun_ext
}  // namespace algo

namespace algo {
namespace gosun_ext {

namespace protobuf_service_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_service_2eproto

// ===================================================================

class ImgRecognizeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:algo.gosun_ext.ImgRecognizeRequest) */ {
 public:
  ImgRecognizeRequest();
  virtual ~ImgRecognizeRequest();

  ImgRecognizeRequest(const ImgRecognizeRequest& from);

  inline ImgRecognizeRequest& operator=(const ImgRecognizeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImgRecognizeRequest& default_instance();

  static inline const ImgRecognizeRequest* internal_default_instance() {
    return reinterpret_cast<const ImgRecognizeRequest*>(
               &_ImgRecognizeRequest_default_instance_);
  }

  void Swap(ImgRecognizeRequest* other);

  // implements Message ----------------------------------------------

  inline ImgRecognizeRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ImgRecognizeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ImgRecognizeRequest& from);
  void MergeFrom(const ImgRecognizeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ImgRecognizeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes imageData = 2;
  void clear_imagedata();
  static const int kImageDataFieldNumber = 2;
  const ::std::string& imagedata() const;
  void set_imagedata(const ::std::string& value);
  #if LANG_CXX11
  void set_imagedata(::std::string&& value);
  #endif
  void set_imagedata(const char* value);
  void set_imagedata(const void* value, size_t size);
  ::std::string* mutable_imagedata();
  ::std::string* release_imagedata();
  void set_allocated_imagedata(::std::string* imagedata);

  // string pictureFormat = 3;
  void clear_pictureformat();
  static const int kPictureFormatFieldNumber = 3;
  const ::std::string& pictureformat() const;
  void set_pictureformat(const ::std::string& value);
  #if LANG_CXX11
  void set_pictureformat(::std::string&& value);
  #endif
  void set_pictureformat(const char* value);
  void set_pictureformat(const char* value, size_t size);
  ::std::string* mutable_pictureformat();
  ::std::string* release_pictureformat();
  void set_allocated_pictureformat(::std::string* pictureformat);

  // string calcParam = 4;
  void clear_calcparam();
  static const int kCalcParamFieldNumber = 4;
  const ::std::string& calcparam() const;
  void set_calcparam(const ::std::string& value);
  #if LANG_CXX11
  void set_calcparam(::std::string&& value);
  #endif
  void set_calcparam(const char* value);
  void set_calcparam(const char* value, size_t size);
  ::std::string* mutable_calcparam();
  ::std::string* release_calcparam();
  void set_allocated_calcparam(::std::string* calcparam);

  // uint32 imageId = 1;
  void clear_imageid();
  static const int kImageIdFieldNumber = 1;
  ::google::protobuf::uint32 imageid() const;
  void set_imageid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:algo.gosun_ext.ImgRecognizeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr imagedata_;
  ::google::protobuf::internal::ArenaStringPtr pictureformat_;
  ::google::protobuf::internal::ArenaStringPtr calcparam_;
  ::google::protobuf::uint32 imageid_;
  mutable int _cached_size_;
  friend struct  protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImgRecognizeReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:algo.gosun_ext.ImgRecognizeReply) */ {
 public:
  ImgRecognizeReply();
  virtual ~ImgRecognizeReply();

  ImgRecognizeReply(const ImgRecognizeReply& from);

  inline ImgRecognizeReply& operator=(const ImgRecognizeReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImgRecognizeReply& default_instance();

  static inline const ImgRecognizeReply* internal_default_instance() {
    return reinterpret_cast<const ImgRecognizeReply*>(
               &_ImgRecognizeReply_default_instance_);
  }

  void Swap(ImgRecognizeReply* other);

  // implements Message ----------------------------------------------

  inline ImgRecognizeReply* New() const PROTOBUF_FINAL { return New(NULL); }

  ImgRecognizeReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ImgRecognizeReply& from);
  void MergeFrom(const ImgRecognizeReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ImgRecognizeReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:algo.gosun_ext.ImgRecognizeReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable int _cached_size_;
  friend struct  protobuf_service_2eproto::TableStruct;
};
// ===================================================================

class ImgProcService_Stub;

class ImgProcService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline ImgProcService() {};
 public:
  virtual ~ImgProcService();

  typedef ImgProcService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void Recognize(::google::protobuf::RpcController* controller,
                       const ::algo::gosun_ext::ImgRecognizeRequest* request,
                       ::algo::gosun_ext::ImgRecognizeReply* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ImgProcService);
};

class ImgProcService_Stub : public ImgProcService {
 public:
  ImgProcService_Stub(::google::protobuf::RpcChannel* channel);
  ImgProcService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~ImgProcService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements ImgProcService ------------------------------------------

  void Recognize(::google::protobuf::RpcController* controller,
                       const ::algo::gosun_ext::ImgRecognizeRequest* request,
                       ::algo::gosun_ext::ImgRecognizeReply* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ImgProcService_Stub);
};


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ImgRecognizeRequest

// uint32 imageId = 1;
inline void ImgRecognizeRequest::clear_imageid() {
  imageid_ = 0u;
}
inline ::google::protobuf::uint32 ImgRecognizeRequest::imageid() const {
  // @@protoc_insertion_point(field_get:algo.gosun_ext.ImgRecognizeRequest.imageId)
  return imageid_;
}
inline void ImgRecognizeRequest::set_imageid(::google::protobuf::uint32 value) {
  
  imageid_ = value;
  // @@protoc_insertion_point(field_set:algo.gosun_ext.ImgRecognizeRequest.imageId)
}

// bytes imageData = 2;
inline void ImgRecognizeRequest::clear_imagedata() {
  imagedata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImgRecognizeRequest::imagedata() const {
  // @@protoc_insertion_point(field_get:algo.gosun_ext.ImgRecognizeRequest.imageData)
  return imagedata_.GetNoArena();
}
inline void ImgRecognizeRequest::set_imagedata(const ::std::string& value) {
  
  imagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:algo.gosun_ext.ImgRecognizeRequest.imageData)
}
#if LANG_CXX11
inline void ImgRecognizeRequest::set_imagedata(::std::string&& value) {
  
  imagedata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:algo.gosun_ext.ImgRecognizeRequest.imageData)
}
#endif
inline void ImgRecognizeRequest::set_imagedata(const char* value) {
  
  imagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:algo.gosun_ext.ImgRecognizeRequest.imageData)
}
inline void ImgRecognizeRequest::set_imagedata(const void* value, size_t size) {
  
  imagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:algo.gosun_ext.ImgRecognizeRequest.imageData)
}
inline ::std::string* ImgRecognizeRequest::mutable_imagedata() {
  
  // @@protoc_insertion_point(field_mutable:algo.gosun_ext.ImgRecognizeRequest.imageData)
  return imagedata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImgRecognizeRequest::release_imagedata() {
  // @@protoc_insertion_point(field_release:algo.gosun_ext.ImgRecognizeRequest.imageData)
  
  return imagedata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImgRecognizeRequest::set_allocated_imagedata(::std::string* imagedata) {
  if (imagedata != NULL) {
    
  } else {
    
  }
  imagedata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imagedata);
  // @@protoc_insertion_point(field_set_allocated:algo.gosun_ext.ImgRecognizeRequest.imageData)
}

// string pictureFormat = 3;
inline void ImgRecognizeRequest::clear_pictureformat() {
  pictureformat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImgRecognizeRequest::pictureformat() const {
  // @@protoc_insertion_point(field_get:algo.gosun_ext.ImgRecognizeRequest.pictureFormat)
  return pictureformat_.GetNoArena();
}
inline void ImgRecognizeRequest::set_pictureformat(const ::std::string& value) {
  
  pictureformat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:algo.gosun_ext.ImgRecognizeRequest.pictureFormat)
}
#if LANG_CXX11
inline void ImgRecognizeRequest::set_pictureformat(::std::string&& value) {
  
  pictureformat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:algo.gosun_ext.ImgRecognizeRequest.pictureFormat)
}
#endif
inline void ImgRecognizeRequest::set_pictureformat(const char* value) {
  
  pictureformat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:algo.gosun_ext.ImgRecognizeRequest.pictureFormat)
}
inline void ImgRecognizeRequest::set_pictureformat(const char* value, size_t size) {
  
  pictureformat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:algo.gosun_ext.ImgRecognizeRequest.pictureFormat)
}
inline ::std::string* ImgRecognizeRequest::mutable_pictureformat() {
  
  // @@protoc_insertion_point(field_mutable:algo.gosun_ext.ImgRecognizeRequest.pictureFormat)
  return pictureformat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImgRecognizeRequest::release_pictureformat() {
  // @@protoc_insertion_point(field_release:algo.gosun_ext.ImgRecognizeRequest.pictureFormat)
  
  return pictureformat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImgRecognizeRequest::set_allocated_pictureformat(::std::string* pictureformat) {
  if (pictureformat != NULL) {
    
  } else {
    
  }
  pictureformat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pictureformat);
  // @@protoc_insertion_point(field_set_allocated:algo.gosun_ext.ImgRecognizeRequest.pictureFormat)
}

// string calcParam = 4;
inline void ImgRecognizeRequest::clear_calcparam() {
  calcparam_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImgRecognizeRequest::calcparam() const {
  // @@protoc_insertion_point(field_get:algo.gosun_ext.ImgRecognizeRequest.calcParam)
  return calcparam_.GetNoArena();
}
inline void ImgRecognizeRequest::set_calcparam(const ::std::string& value) {
  
  calcparam_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:algo.gosun_ext.ImgRecognizeRequest.calcParam)
}
#if LANG_CXX11
inline void ImgRecognizeRequest::set_calcparam(::std::string&& value) {
  
  calcparam_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:algo.gosun_ext.ImgRecognizeRequest.calcParam)
}
#endif
inline void ImgRecognizeRequest::set_calcparam(const char* value) {
  
  calcparam_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:algo.gosun_ext.ImgRecognizeRequest.calcParam)
}
inline void ImgRecognizeRequest::set_calcparam(const char* value, size_t size) {
  
  calcparam_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:algo.gosun_ext.ImgRecognizeRequest.calcParam)
}
inline ::std::string* ImgRecognizeRequest::mutable_calcparam() {
  
  // @@protoc_insertion_point(field_mutable:algo.gosun_ext.ImgRecognizeRequest.calcParam)
  return calcparam_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImgRecognizeRequest::release_calcparam() {
  // @@protoc_insertion_point(field_release:algo.gosun_ext.ImgRecognizeRequest.calcParam)
  
  return calcparam_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImgRecognizeRequest::set_allocated_calcparam(::std::string* calcparam) {
  if (calcparam != NULL) {
    
  } else {
    
  }
  calcparam_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), calcparam);
  // @@protoc_insertion_point(field_set_allocated:algo.gosun_ext.ImgRecognizeRequest.calcParam)
}

// -------------------------------------------------------------------

// ImgRecognizeReply

// string data = 1;
inline void ImgRecognizeReply::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImgRecognizeReply::data() const {
  // @@protoc_insertion_point(field_get:algo.gosun_ext.ImgRecognizeReply.data)
  return data_.GetNoArena();
}
inline void ImgRecognizeReply::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:algo.gosun_ext.ImgRecognizeReply.data)
}
#if LANG_CXX11
inline void ImgRecognizeReply::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:algo.gosun_ext.ImgRecognizeReply.data)
}
#endif
inline void ImgRecognizeReply::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:algo.gosun_ext.ImgRecognizeReply.data)
}
inline void ImgRecognizeReply::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:algo.gosun_ext.ImgRecognizeReply.data)
}
inline ::std::string* ImgRecognizeReply::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:algo.gosun_ext.ImgRecognizeReply.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImgRecognizeReply::release_data() {
  // @@protoc_insertion_point(field_release:algo.gosun_ext.ImgRecognizeReply.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImgRecognizeReply::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:algo.gosun_ext.ImgRecognizeReply.data)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace gosun_ext
}  // namespace algo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_service_2eproto__INCLUDED
