// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

#ifndef PROTOBUF_INCLUDED_service_2eproto
#define PROTOBUF_INCLUDED_service_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto 

namespace protobuf_service_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_service_2eproto
namespace gosun {
namespace video {
class VideoTrailRecReply;
class VideoTrailRecReplyDefaultTypeInternal;
extern VideoTrailRecReplyDefaultTypeInternal _VideoTrailRecReply_default_instance_;
class VideoTrailRecRequest;
class VideoTrailRecRequestDefaultTypeInternal;
extern VideoTrailRecRequestDefaultTypeInternal _VideoTrailRecRequest_default_instance_;
class Void;
class VoidDefaultTypeInternal;
extern VoidDefaultTypeInternal _Void_default_instance_;
}  // namespace video
}  // namespace gosun
namespace google {
namespace protobuf {
template<> ::gosun::video::VideoTrailRecReply* Arena::CreateMaybeMessage<::gosun::video::VideoTrailRecReply>(Arena*);
template<> ::gosun::video::VideoTrailRecRequest* Arena::CreateMaybeMessage<::gosun::video::VideoTrailRecRequest>(Arena*);
template<> ::gosun::video::Void* Arena::CreateMaybeMessage<::gosun::video::Void>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace gosun {
namespace video {

// ===================================================================

class Void : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gosun.video.Void) */ {
 public:
  Void();
  virtual ~Void();

  Void(const Void& from);

  inline Void& operator=(const Void& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Void(Void&& from) noexcept
    : Void() {
    *this = ::std::move(from);
  }

  inline Void& operator=(Void&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Void& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Void* internal_default_instance() {
    return reinterpret_cast<const Void*>(
               &_Void_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Void* other);
  friend void swap(Void& a, Void& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Void* New() const final {
    return CreateMaybeMessage<Void>(NULL);
  }

  Void* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Void>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Void& from);
  void MergeFrom(const Void& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Void* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:gosun.video.Void)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VideoTrailRecRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gosun.video.VideoTrailRecRequest) */ {
 public:
  VideoTrailRecRequest();
  virtual ~VideoTrailRecRequest();

  VideoTrailRecRequest(const VideoTrailRecRequest& from);

  inline VideoTrailRecRequest& operator=(const VideoTrailRecRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VideoTrailRecRequest(VideoTrailRecRequest&& from) noexcept
    : VideoTrailRecRequest() {
    *this = ::std::move(from);
  }

  inline VideoTrailRecRequest& operator=(VideoTrailRecRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VideoTrailRecRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VideoTrailRecRequest* internal_default_instance() {
    return reinterpret_cast<const VideoTrailRecRequest*>(
               &_VideoTrailRecRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(VideoTrailRecRequest* other);
  friend void swap(VideoTrailRecRequest& a, VideoTrailRecRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VideoTrailRecRequest* New() const final {
    return CreateMaybeMessage<VideoTrailRecRequest>(NULL);
  }

  VideoTrailRecRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VideoTrailRecRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VideoTrailRecRequest& from);
  void MergeFrom(const VideoTrailRecRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VideoTrailRecRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes rgbImg = 3;
  void clear_rgbimg();
  static const int kRgbImgFieldNumber = 3;
  const ::std::string& rgbimg() const;
  void set_rgbimg(const ::std::string& value);
  #if LANG_CXX11
  void set_rgbimg(::std::string&& value);
  #endif
  void set_rgbimg(const char* value);
  void set_rgbimg(const void* value, size_t size);
  ::std::string* mutable_rgbimg();
  ::std::string* release_rgbimg();
  void set_allocated_rgbimg(::std::string* rgbimg);

  // uint64 timestamp = 2;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // uint32 videoChl = 1;
  void clear_videochl();
  static const int kVideoChlFieldNumber = 1;
  ::google::protobuf::uint32 videochl() const;
  void set_videochl(::google::protobuf::uint32 value);

  // uint32 height = 4;
  void clear_height();
  static const int kHeightFieldNumber = 4;
  ::google::protobuf::uint32 height() const;
  void set_height(::google::protobuf::uint32 value);

  // uint32 width = 5;
  void clear_width();
  static const int kWidthFieldNumber = 5;
  ::google::protobuf::uint32 width() const;
  void set_width(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gosun.video.VideoTrailRecRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr rgbimg_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::uint32 videochl_;
  ::google::protobuf::uint32 height_;
  ::google::protobuf::uint32 width_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VideoTrailRecReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gosun.video.VideoTrailRecReply) */ {
 public:
  VideoTrailRecReply();
  virtual ~VideoTrailRecReply();

  VideoTrailRecReply(const VideoTrailRecReply& from);

  inline VideoTrailRecReply& operator=(const VideoTrailRecReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VideoTrailRecReply(VideoTrailRecReply&& from) noexcept
    : VideoTrailRecReply() {
    *this = ::std::move(from);
  }

  inline VideoTrailRecReply& operator=(VideoTrailRecReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VideoTrailRecReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VideoTrailRecReply* internal_default_instance() {
    return reinterpret_cast<const VideoTrailRecReply*>(
               &_VideoTrailRecReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(VideoTrailRecReply* other);
  friend void swap(VideoTrailRecReply& a, VideoTrailRecReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VideoTrailRecReply* New() const final {
    return CreateMaybeMessage<VideoTrailRecReply>(NULL);
  }

  VideoTrailRecReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VideoTrailRecReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VideoTrailRecReply& from);
  void MergeFrom(const VideoTrailRecReply& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VideoTrailRecReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string jsonData = 1;
  void clear_jsondata();
  static const int kJsonDataFieldNumber = 1;
  const ::std::string& jsondata() const;
  void set_jsondata(const ::std::string& value);
  #if LANG_CXX11
  void set_jsondata(::std::string&& value);
  #endif
  void set_jsondata(const char* value);
  void set_jsondata(const char* value, size_t size);
  ::std::string* mutable_jsondata();
  ::std::string* release_jsondata();
  void set_allocated_jsondata(::std::string* jsondata);

  // @@protoc_insertion_point(class_scope:gosun.video.VideoTrailRecReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr jsondata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Void

// -------------------------------------------------------------------

// VideoTrailRecRequest

// uint32 videoChl = 1;
inline void VideoTrailRecRequest::clear_videochl() {
  videochl_ = 0u;
}
inline ::google::protobuf::uint32 VideoTrailRecRequest::videochl() const {
  // @@protoc_insertion_point(field_get:gosun.video.VideoTrailRecRequest.videoChl)
  return videochl_;
}
inline void VideoTrailRecRequest::set_videochl(::google::protobuf::uint32 value) {
  
  videochl_ = value;
  // @@protoc_insertion_point(field_set:gosun.video.VideoTrailRecRequest.videoChl)
}

// uint64 timestamp = 2;
inline void VideoTrailRecRequest::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 VideoTrailRecRequest::timestamp() const {
  // @@protoc_insertion_point(field_get:gosun.video.VideoTrailRecRequest.timestamp)
  return timestamp_;
}
inline void VideoTrailRecRequest::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:gosun.video.VideoTrailRecRequest.timestamp)
}

// bytes rgbImg = 3;
inline void VideoTrailRecRequest::clear_rgbimg() {
  rgbimg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VideoTrailRecRequest::rgbimg() const {
  // @@protoc_insertion_point(field_get:gosun.video.VideoTrailRecRequest.rgbImg)
  return rgbimg_.GetNoArena();
}
inline void VideoTrailRecRequest::set_rgbimg(const ::std::string& value) {
  
  rgbimg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gosun.video.VideoTrailRecRequest.rgbImg)
}
#if LANG_CXX11
inline void VideoTrailRecRequest::set_rgbimg(::std::string&& value) {
  
  rgbimg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gosun.video.VideoTrailRecRequest.rgbImg)
}
#endif
inline void VideoTrailRecRequest::set_rgbimg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  rgbimg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gosun.video.VideoTrailRecRequest.rgbImg)
}
inline void VideoTrailRecRequest::set_rgbimg(const void* value, size_t size) {
  
  rgbimg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gosun.video.VideoTrailRecRequest.rgbImg)
}
inline ::std::string* VideoTrailRecRequest::mutable_rgbimg() {
  
  // @@protoc_insertion_point(field_mutable:gosun.video.VideoTrailRecRequest.rgbImg)
  return rgbimg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VideoTrailRecRequest::release_rgbimg() {
  // @@protoc_insertion_point(field_release:gosun.video.VideoTrailRecRequest.rgbImg)
  
  return rgbimg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VideoTrailRecRequest::set_allocated_rgbimg(::std::string* rgbimg) {
  if (rgbimg != NULL) {
    
  } else {
    
  }
  rgbimg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rgbimg);
  // @@protoc_insertion_point(field_set_allocated:gosun.video.VideoTrailRecRequest.rgbImg)
}

// uint32 height = 4;
inline void VideoTrailRecRequest::clear_height() {
  height_ = 0u;
}
inline ::google::protobuf::uint32 VideoTrailRecRequest::height() const {
  // @@protoc_insertion_point(field_get:gosun.video.VideoTrailRecRequest.height)
  return height_;
}
inline void VideoTrailRecRequest::set_height(::google::protobuf::uint32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:gosun.video.VideoTrailRecRequest.height)
}

// uint32 width = 5;
inline void VideoTrailRecRequest::clear_width() {
  width_ = 0u;
}
inline ::google::protobuf::uint32 VideoTrailRecRequest::width() const {
  // @@protoc_insertion_point(field_get:gosun.video.VideoTrailRecRequest.width)
  return width_;
}
inline void VideoTrailRecRequest::set_width(::google::protobuf::uint32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:gosun.video.VideoTrailRecRequest.width)
}

// -------------------------------------------------------------------

// VideoTrailRecReply

// string jsonData = 1;
inline void VideoTrailRecReply::clear_jsondata() {
  jsondata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VideoTrailRecReply::jsondata() const {
  // @@protoc_insertion_point(field_get:gosun.video.VideoTrailRecReply.jsonData)
  return jsondata_.GetNoArena();
}
inline void VideoTrailRecReply::set_jsondata(const ::std::string& value) {
  
  jsondata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gosun.video.VideoTrailRecReply.jsonData)
}
#if LANG_CXX11
inline void VideoTrailRecReply::set_jsondata(::std::string&& value) {
  
  jsondata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gosun.video.VideoTrailRecReply.jsonData)
}
#endif
inline void VideoTrailRecReply::set_jsondata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  jsondata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gosun.video.VideoTrailRecReply.jsonData)
}
inline void VideoTrailRecReply::set_jsondata(const char* value, size_t size) {
  
  jsondata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gosun.video.VideoTrailRecReply.jsonData)
}
inline ::std::string* VideoTrailRecReply::mutable_jsondata() {
  
  // @@protoc_insertion_point(field_mutable:gosun.video.VideoTrailRecReply.jsonData)
  return jsondata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VideoTrailRecReply::release_jsondata() {
  // @@protoc_insertion_point(field_release:gosun.video.VideoTrailRecReply.jsonData)
  
  return jsondata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VideoTrailRecReply::set_allocated_jsondata(::std::string* jsondata) {
  if (jsondata != NULL) {
    
  } else {
    
  }
  jsondata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jsondata);
  // @@protoc_insertion_point(field_set_allocated:gosun.video.VideoTrailRecReply.jsonData)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace video
}  // namespace gosun

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_service_2eproto
